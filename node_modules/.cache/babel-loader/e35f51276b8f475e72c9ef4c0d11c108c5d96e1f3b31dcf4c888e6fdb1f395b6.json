{"ast":null,"code":"'use strict';\n\nvar openCloseTag = require('../util/html').openCloseTag;\nmodule.exports = blockHtml;\nvar tab = '\\t';\nvar space = ' ';\nvar lineFeed = '\\n';\nvar lessThan = '<';\nvar rawOpenExpression = /^<(script|pre|style)(?=(\\s|>|$))/i;\nvar rawCloseExpression = /<\\/(script|pre|style)>/i;\nvar commentOpenExpression = /^<!--/;\nvar commentCloseExpression = /-->/;\nvar instructionOpenExpression = /^<\\?/;\nvar instructionCloseExpression = /\\?>/;\nvar directiveOpenExpression = /^<![A-Za-z]/;\nvar directiveCloseExpression = />/;\nvar cdataOpenExpression = /^<!\\[CDATA\\[/;\nvar cdataCloseExpression = /]]>/;\nvar elementCloseExpression = /^$/;\nvar otherElementOpenExpression = new RegExp(openCloseTag.source + '\\\\s*$');\nfunction blockHtml(eat, value, silent) {\n  var self = this;\n  var blocks = self.options.blocks.join('|');\n  var elementOpenExpression = new RegExp('^</?(' + blocks + ')(?=(\\\\s|/?>|$))', 'i');\n  var length = value.length;\n  var index = 0;\n  var next;\n  var line;\n  var offset;\n  var character;\n  var count;\n  var sequence;\n  var subvalue;\n  var sequences = [[rawOpenExpression, rawCloseExpression, true], [commentOpenExpression, commentCloseExpression, true], [instructionOpenExpression, instructionCloseExpression, true], [directiveOpenExpression, directiveCloseExpression, true], [cdataOpenExpression, cdataCloseExpression, true], [elementOpenExpression, elementCloseExpression, true], [otherElementOpenExpression, elementCloseExpression, false]];\n\n  // Eat initial spacing.\n  while (index < length) {\n    character = value.charAt(index);\n    if (character !== tab && character !== space) {\n      break;\n    }\n    index++;\n  }\n  if (value.charAt(index) !== lessThan) {\n    return;\n  }\n  next = value.indexOf(lineFeed, index + 1);\n  next = next === -1 ? length : next;\n  line = value.slice(index, next);\n  offset = -1;\n  count = sequences.length;\n  while (++offset < count) {\n    if (sequences[offset][0].test(line)) {\n      sequence = sequences[offset];\n      break;\n    }\n  }\n  if (!sequence) {\n    return;\n  }\n  if (silent) {\n    return sequence[2];\n  }\n  index = next;\n  if (!sequence[1].test(line)) {\n    while (index < length) {\n      next = value.indexOf(lineFeed, index + 1);\n      next = next === -1 ? length : next;\n      line = value.slice(index + 1, next);\n      if (sequence[1].test(line)) {\n        if (line) {\n          index = next;\n        }\n        break;\n      }\n      index = next;\n    }\n  }\n  subvalue = value.slice(0, index);\n  return eat(subvalue)({\n    type: 'html',\n    value: subvalue\n  });\n}","map":{"version":3,"names":["openCloseTag","require","module","exports","blockHtml","tab","space","lineFeed","lessThan","rawOpenExpression","rawCloseExpression","commentOpenExpression","commentCloseExpression","instructionOpenExpression","instructionCloseExpression","directiveOpenExpression","directiveCloseExpression","cdataOpenExpression","cdataCloseExpression","elementCloseExpression","otherElementOpenExpression","RegExp","source","eat","value","silent","self","blocks","options","join","elementOpenExpression","length","index","next","line","offset","character","count","sequence","subvalue","sequences","charAt","indexOf","slice","test","type"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/html-block.js"],"sourcesContent":["'use strict'\n\nvar openCloseTag = require('../util/html').openCloseTag\n\nmodule.exports = blockHtml\n\nvar tab = '\\t'\nvar space = ' '\nvar lineFeed = '\\n'\nvar lessThan = '<'\n\nvar rawOpenExpression = /^<(script|pre|style)(?=(\\s|>|$))/i\nvar rawCloseExpression = /<\\/(script|pre|style)>/i\nvar commentOpenExpression = /^<!--/\nvar commentCloseExpression = /-->/\nvar instructionOpenExpression = /^<\\?/\nvar instructionCloseExpression = /\\?>/\nvar directiveOpenExpression = /^<![A-Za-z]/\nvar directiveCloseExpression = />/\nvar cdataOpenExpression = /^<!\\[CDATA\\[/\nvar cdataCloseExpression = /]]>/\nvar elementCloseExpression = /^$/\nvar otherElementOpenExpression = new RegExp(openCloseTag.source + '\\\\s*$')\n\nfunction blockHtml(eat, value, silent) {\n  var self = this\n  var blocks = self.options.blocks.join('|')\n  var elementOpenExpression = new RegExp(\n    '^</?(' + blocks + ')(?=(\\\\s|/?>|$))',\n    'i'\n  )\n  var length = value.length\n  var index = 0\n  var next\n  var line\n  var offset\n  var character\n  var count\n  var sequence\n  var subvalue\n\n  var sequences = [\n    [rawOpenExpression, rawCloseExpression, true],\n    [commentOpenExpression, commentCloseExpression, true],\n    [instructionOpenExpression, instructionCloseExpression, true],\n    [directiveOpenExpression, directiveCloseExpression, true],\n    [cdataOpenExpression, cdataCloseExpression, true],\n    [elementOpenExpression, elementCloseExpression, true],\n    [otherElementOpenExpression, elementCloseExpression, false]\n  ]\n\n  // Eat initial spacing.\n  while (index < length) {\n    character = value.charAt(index)\n\n    if (character !== tab && character !== space) {\n      break\n    }\n\n    index++\n  }\n\n  if (value.charAt(index) !== lessThan) {\n    return\n  }\n\n  next = value.indexOf(lineFeed, index + 1)\n  next = next === -1 ? length : next\n  line = value.slice(index, next)\n  offset = -1\n  count = sequences.length\n\n  while (++offset < count) {\n    if (sequences[offset][0].test(line)) {\n      sequence = sequences[offset]\n      break\n    }\n  }\n\n  if (!sequence) {\n    return\n  }\n\n  if (silent) {\n    return sequence[2]\n  }\n\n  index = next\n\n  if (!sequence[1].test(line)) {\n    while (index < length) {\n      next = value.indexOf(lineFeed, index + 1)\n      next = next === -1 ? length : next\n      line = value.slice(index + 1, next)\n\n      if (sequence[1].test(line)) {\n        if (line) {\n          index = next\n        }\n\n        break\n      }\n\n      index = next\n    }\n  }\n\n  subvalue = value.slice(0, index)\n\n  return eat(subvalue)({type: 'html', value: subvalue})\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}