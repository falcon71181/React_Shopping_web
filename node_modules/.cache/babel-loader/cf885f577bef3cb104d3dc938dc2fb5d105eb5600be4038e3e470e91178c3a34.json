{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { StyledHexColorIcon, StyledHexInput } from './styled';\nimport { hexToRgba, rgbToHsv, isValidColor, decomposeColor } from '../../../../styles/helpers/color';\nimport { ColorPickerContext } from '../../context';\nexport default function Hex() {\n  var _useContext = useContext(ColorPickerContext),\n    hex = _useContext.hex,\n    tabIndex = _useContext.tabIndex,\n    onChange = _useContext.onChange;\n  var _useState = useState(hex.substr(1)),\n    _useState2 = _slicedToArray(_useState, 2),\n    color = _useState2[0],\n    setColor = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFocused = _useState4[0],\n    setIsFocused = _useState4[1];\n  useEffect(function () {\n    if (!isFocused) {\n      setColor(hex.substr(1));\n    }\n  }, [hex, isFocused]);\n  var handleChange = function handleChange(event) {\n    var newHex = \"#\".concat(event.target.value);\n    setColor(event.target.value);\n    var rgba = hexToRgba(newHex);\n    if (isValidColor(rgba)) {\n      onChange({\n        hex: newHex,\n        rgba: decomposeColor(rgba).values,\n        hsv: decomposeColor(rgbToHsv(rgba)).values\n      });\n    }\n  };\n  var handleBlur = function handleBlur() {\n    setIsFocused(false);\n    setColor(hex.substr(1));\n  };\n  return React.createElement(StyledHexInput, {\n    value: color,\n    bottomHelpText: \"HEX\",\n    onChange: handleChange,\n    onFocus: function onFocus() {\n      return setIsFocused(true);\n    },\n    onBlur: handleBlur,\n    icon: React.createElement(StyledHexColorIcon, null, \"#\"),\n    tabIndex: tabIndex\n  });\n}","map":{"version":3,"names":["_slicedToArray","React","useState","useEffect","useContext","StyledHexColorIcon","StyledHexInput","hexToRgba","rgbToHsv","isValidColor","decomposeColor","ColorPickerContext","Hex","_useContext","hex","tabIndex","onChange","_useState","substr","_useState2","color","setColor","_useState3","_useState4","isFocused","setIsFocused","handleChange","event","newHex","concat","target","value","rgba","values","hsv","handleBlur","createElement","bottomHelpText","onFocus","onBlur","icon"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/ColorPicker/commons/hex/index.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { StyledHexColorIcon, StyledHexInput } from './styled';\nimport { hexToRgba, rgbToHsv, isValidColor, decomposeColor } from '../../../../styles/helpers/color';\nimport { ColorPickerContext } from '../../context';\nexport default function Hex() {\n  var _useContext = useContext(ColorPickerContext),\n      hex = _useContext.hex,\n      tabIndex = _useContext.tabIndex,\n      onChange = _useContext.onChange;\n\n  var _useState = useState(hex.substr(1)),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocused = _useState4[0],\n      setIsFocused = _useState4[1];\n\n  useEffect(function () {\n    if (!isFocused) {\n      setColor(hex.substr(1));\n    }\n  }, [hex, isFocused]);\n\n  var handleChange = function handleChange(event) {\n    var newHex = \"#\".concat(event.target.value);\n    setColor(event.target.value);\n    var rgba = hexToRgba(newHex);\n\n    if (isValidColor(rgba)) {\n      onChange({\n        hex: newHex,\n        rgba: decomposeColor(rgba).values,\n        hsv: decomposeColor(rgbToHsv(rgba)).values\n      });\n    }\n  };\n\n  var handleBlur = function handleBlur() {\n    setIsFocused(false);\n    setColor(hex.substr(1));\n  };\n\n  return React.createElement(StyledHexInput, {\n    value: color,\n    bottomHelpText: \"HEX\",\n    onChange: handleChange,\n    onFocus: function onFocus() {\n      return setIsFocused(true);\n    },\n    onBlur: handleBlur,\n    icon: React.createElement(StyledHexColorIcon, null, \"#\"),\n    tabIndex: tabIndex\n  });\n}"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,kBAAkB,EAAEC,cAAc,QAAQ,UAAU;AAC7D,SAASC,SAAS,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,QAAQ,kCAAkC;AACpG,SAASC,kBAAkB,QAAQ,eAAe;AAClD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAIC,WAAW,GAAGT,UAAU,CAACO,kBAAkB,CAAC;IAC5CG,GAAG,GAAGD,WAAW,CAACC,GAAG;IACrBC,QAAQ,GAAGF,WAAW,CAACE,QAAQ;IAC/BC,QAAQ,GAAGH,WAAW,CAACG,QAAQ;EAEnC,IAAIC,SAAS,GAAGf,QAAQ,CAACY,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;IACnCC,UAAU,GAAGnB,cAAc,CAACiB,SAAS,EAAE,CAAC,CAAC;IACzCG,KAAK,GAAGD,UAAU,CAAC,CAAC,CAAC;IACrBE,QAAQ,GAAGF,UAAU,CAAC,CAAC,CAAC;EAE5B,IAAIG,UAAU,GAAGpB,QAAQ,CAAC,KAAK,CAAC;IAC5BqB,UAAU,GAAGvB,cAAc,CAACsB,UAAU,EAAE,CAAC,CAAC;IAC1CE,SAAS,GAAGD,UAAU,CAAC,CAAC,CAAC;IACzBE,YAAY,GAAGF,UAAU,CAAC,CAAC,CAAC;EAEhCpB,SAAS,CAAC,YAAY;IACpB,IAAI,CAACqB,SAAS,EAAE;MACdH,QAAQ,CAACP,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACJ,GAAG,EAAEU,SAAS,CAAC,CAAC;EAEpB,IAAIE,YAAY,GAAG,SAASA,YAAYA,CAACC,KAAK,EAAE;IAC9C,IAAIC,MAAM,GAAG,GAAG,CAACC,MAAM,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3CV,QAAQ,CAACM,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC5B,IAAIC,IAAI,GAAGzB,SAAS,CAACqB,MAAM,CAAC;IAE5B,IAAInB,YAAY,CAACuB,IAAI,CAAC,EAAE;MACtBhB,QAAQ,CAAC;QACPF,GAAG,EAAEc,MAAM;QACXI,IAAI,EAAEtB,cAAc,CAACsB,IAAI,CAAC,CAACC,MAAM;QACjCC,GAAG,EAAExB,cAAc,CAACF,QAAQ,CAACwB,IAAI,CAAC,CAAC,CAACC;MACtC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,IAAIE,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;IACrCV,YAAY,CAAC,KAAK,CAAC;IACnBJ,QAAQ,CAACP,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,OAAOjB,KAAK,CAACmC,aAAa,CAAC9B,cAAc,EAAE;IACzCyB,KAAK,EAAEX,KAAK;IACZiB,cAAc,EAAE,KAAK;IACrBrB,QAAQ,EAAEU,YAAY;IACtBY,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;MAC1B,OAAOb,YAAY,CAAC,IAAI,CAAC;IAC3B,CAAC;IACDc,MAAM,EAAEJ,UAAU;IAClBK,IAAI,EAAEvC,KAAK,CAACmC,aAAa,CAAC/B,kBAAkB,EAAE,IAAI,EAAE,GAAG,CAAC;IACxDU,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}