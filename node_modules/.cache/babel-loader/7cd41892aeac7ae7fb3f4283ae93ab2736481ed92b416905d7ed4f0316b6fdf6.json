{"ast":null,"code":"function escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nfunction getWords(query) {\n  return query.split(/\\s+/g).map(function (word) {\n    return word.trim();\n  }).filter(function (word) {\n    return !!word;\n  });\n}\nexport default function filterCollection(params) {\n  var query = params.query,\n    data = params.data,\n    _params$mapValuesToSt = params.mapValuesToStringFn,\n    mapValuesToStringFn = _params$mapValuesToSt === void 0 ? function (item) {\n      return typeof item.label === 'string' ? item.label : item.searchableText;\n    } : _params$mapValuesToSt;\n  if (query) {\n    return data.filter(function (item) {\n      var stringToMatch = mapValuesToStringFn(item);\n      var words = getWords(query);\n      return words.every(function (word) {\n        var regex = new RegExp(escapeRegExp(word), 'i');\n        return regex.test(stringToMatch);\n      });\n    });\n  }\n  return data;\n}","map":{"version":3,"names":["escapeRegExp","string","replace","getWords","query","split","map","word","trim","filter","filterCollection","params","data","_params$mapValuesToSt","mapValuesToStringFn","item","label","searchableText","stringToMatch","words","every","regex","RegExp","test"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/InternalDropdown/helpers/searchFilter.js"],"sourcesContent":["function escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getWords(query) {\n  return query.split(/\\s+/g).map(function (word) {\n    return word.trim();\n  }).filter(function (word) {\n    return !!word;\n  });\n}\n\nexport default function filterCollection(params) {\n  var query = params.query,\n      data = params.data,\n      _params$mapValuesToSt = params.mapValuesToStringFn,\n      mapValuesToStringFn = _params$mapValuesToSt === void 0 ? function (item) {\n    return typeof item.label === 'string' ? item.label : item.searchableText;\n  } : _params$mapValuesToSt;\n\n  if (query) {\n    return data.filter(function (item) {\n      var stringToMatch = mapValuesToStringFn(item);\n      var words = getWords(query);\n      return words.every(function (word) {\n        var regex = new RegExp(escapeRegExp(word), 'i');\n        return regex.test(stringToMatch);\n      });\n    });\n  }\n\n  return data;\n}"],"mappings":"AAAA,SAASA,YAAYA,CAACC,MAAM,EAAE;EAC5B,OAAOA,MAAM,CAACC,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;AACtD;AAEA,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB,OAAOA,KAAK,CAACC,KAAK,CAAC,MAAM,CAAC,CAACC,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC7C,OAAOA,IAAI,CAACC,IAAI,CAAC,CAAC;EACpB,CAAC,CAAC,CAACC,MAAM,CAAC,UAAUF,IAAI,EAAE;IACxB,OAAO,CAAC,CAACA,IAAI;EACf,CAAC,CAAC;AACJ;AAEA,eAAe,SAASG,gBAAgBA,CAACC,MAAM,EAAE;EAC/C,IAAIP,KAAK,GAAGO,MAAM,CAACP,KAAK;IACpBQ,IAAI,GAAGD,MAAM,CAACC,IAAI;IAClBC,qBAAqB,GAAGF,MAAM,CAACG,mBAAmB;IAClDA,mBAAmB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,UAAUE,IAAI,EAAE;MAC3E,OAAO,OAAOA,IAAI,CAACC,KAAK,KAAK,QAAQ,GAAGD,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,cAAc;IAC1E,CAAC,GAAGJ,qBAAqB;EAEzB,IAAIT,KAAK,EAAE;IACT,OAAOQ,IAAI,CAACH,MAAM,CAAC,UAAUM,IAAI,EAAE;MACjC,IAAIG,aAAa,GAAGJ,mBAAmB,CAACC,IAAI,CAAC;MAC7C,IAAII,KAAK,GAAGhB,QAAQ,CAACC,KAAK,CAAC;MAC3B,OAAOe,KAAK,CAACC,KAAK,CAAC,UAAUb,IAAI,EAAE;QACjC,IAAIc,KAAK,GAAG,IAAIC,MAAM,CAACtB,YAAY,CAACO,IAAI,CAAC,EAAE,GAAG,CAAC;QAC/C,OAAOc,KAAK,CAACE,IAAI,CAACL,aAAa,CAAC;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,OAAON,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}