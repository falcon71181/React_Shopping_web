{"ast":null,"code":"'use strict';\n\nmodule.exports = atxHeading;\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar numberSign = '#';\nvar maxFenceCount = 6;\nfunction atxHeading(eat, value, silent) {\n  var self = this;\n  var pedantic = self.options.pedantic;\n  var length = value.length + 1;\n  var index = -1;\n  var now = eat.now();\n  var subvalue = '';\n  var content = '';\n  var character;\n  var queue;\n  var depth;\n\n  // Eat initial spacing.\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character !== space && character !== tab) {\n      index--;\n      break;\n    }\n    subvalue += character;\n  }\n\n  // Eat hashes.\n  depth = 0;\n  while (++index <= length) {\n    character = value.charAt(index);\n    if (character !== numberSign) {\n      index--;\n      break;\n    }\n    subvalue += character;\n    depth++;\n  }\n  if (depth > maxFenceCount) {\n    return;\n  }\n  if (!depth || !pedantic && value.charAt(index + 1) === numberSign) {\n    return;\n  }\n  length = value.length + 1;\n\n  // Eat intermediate white-space.\n  queue = '';\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character !== space && character !== tab) {\n      index--;\n      break;\n    }\n    queue += character;\n  }\n\n  // Exit when not in pedantic mode without spacing.\n  if (!pedantic && queue.length === 0 && character && character !== lineFeed) {\n    return;\n  }\n  if (silent) {\n    return true;\n  }\n\n  // Eat content.\n  subvalue += queue;\n  queue = '';\n  content = '';\n  while (++index < length) {\n    character = value.charAt(index);\n    if (!character || character === lineFeed) {\n      break;\n    }\n    if (character !== space && character !== tab && character !== numberSign) {\n      content += queue + character;\n      queue = '';\n      continue;\n    }\n    while (character === space || character === tab) {\n      queue += character;\n      character = value.charAt(++index);\n    }\n\n    // `#` without a queue is part of the content.\n    if (!pedantic && content && !queue && character === numberSign) {\n      content += character;\n      continue;\n    }\n    while (character === numberSign) {\n      queue += character;\n      character = value.charAt(++index);\n    }\n    while (character === space || character === tab) {\n      queue += character;\n      character = value.charAt(++index);\n    }\n    index--;\n  }\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  subvalue += content + queue;\n  return eat(subvalue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  });\n}","map":{"version":3,"names":["module","exports","atxHeading","lineFeed","tab","space","numberSign","maxFenceCount","eat","value","silent","self","pedantic","options","length","index","now","subvalue","content","character","queue","depth","charAt","column","offset","type","children","tokenizeInline"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/heading-atx.js"],"sourcesContent":["'use strict'\n\nmodule.exports = atxHeading\n\nvar lineFeed = '\\n'\nvar tab = '\\t'\nvar space = ' '\nvar numberSign = '#'\n\nvar maxFenceCount = 6\n\nfunction atxHeading(eat, value, silent) {\n  var self = this\n  var pedantic = self.options.pedantic\n  var length = value.length + 1\n  var index = -1\n  var now = eat.now()\n  var subvalue = ''\n  var content = ''\n  var character\n  var queue\n  var depth\n\n  // Eat initial spacing.\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character !== space && character !== tab) {\n      index--\n      break\n    }\n\n    subvalue += character\n  }\n\n  // Eat hashes.\n  depth = 0\n\n  while (++index <= length) {\n    character = value.charAt(index)\n\n    if (character !== numberSign) {\n      index--\n      break\n    }\n\n    subvalue += character\n    depth++\n  }\n\n  if (depth > maxFenceCount) {\n    return\n  }\n\n  if (!depth || (!pedantic && value.charAt(index + 1) === numberSign)) {\n    return\n  }\n\n  length = value.length + 1\n\n  // Eat intermediate white-space.\n  queue = ''\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character !== space && character !== tab) {\n      index--\n      break\n    }\n\n    queue += character\n  }\n\n  // Exit when not in pedantic mode without spacing.\n  if (!pedantic && queue.length === 0 && character && character !== lineFeed) {\n    return\n  }\n\n  if (silent) {\n    return true\n  }\n\n  // Eat content.\n  subvalue += queue\n  queue = ''\n  content = ''\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (!character || character === lineFeed) {\n      break\n    }\n\n    if (character !== space && character !== tab && character !== numberSign) {\n      content += queue + character\n      queue = ''\n      continue\n    }\n\n    while (character === space || character === tab) {\n      queue += character\n      character = value.charAt(++index)\n    }\n\n    // `#` without a queue is part of the content.\n    if (!pedantic && content && !queue && character === numberSign) {\n      content += character\n      continue\n    }\n\n    while (character === numberSign) {\n      queue += character\n      character = value.charAt(++index)\n    }\n\n    while (character === space || character === tab) {\n      queue += character\n      character = value.charAt(++index)\n    }\n\n    index--\n  }\n\n  now.column += subvalue.length\n  now.offset += subvalue.length\n  subvalue += content + queue\n\n  return eat(subvalue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}