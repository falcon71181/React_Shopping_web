{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './context';\nimport RenderIf from '../RenderIf';\nimport { LEFT_KEY, RIGHT_KEY } from '../../libs/constants';\nimport { getChildTabNodes, insertChildOrderly, getTabIndexFromName, getChildrenTotalWidth, getChildrenTotalWidthUpToClickedTab, isNotSameChildren, getUpdatedTabsetChildren, getRightButtonDisabledState, getLeftButtonDisabledState } from './utils';\nimport RightThinChevron from './rightThinChevron';\nimport LeftThinChevron from './leftThinChevron';\nimport ResizeSensor from '../../libs/ResizeSensor';\nimport debounce from '../../libs/debounce';\nimport StyledContainer from './styled/container';\nimport StyledObserver from './styled/observer';\nimport StyledTabset from './styled/tabset';\nimport StyledInnerContainer from './styled/innerContainer';\nimport StyledButtonGroup from './styled/buttonGroup';\nimport StyledButtonIcon from './styled/buttonIcon';\nvar RIGHT_SIDE = 1;\nvar LEFT_SIDE = -1;\nvar Tabset = function (_Component) {\n  _inherits(Tabset, _Component);\n  var _super = _createSuper(Tabset);\n  function Tabset(props) {\n    var _this$keyHandlerMap;\n    var _this;\n    _classCallCheck(this, Tabset);\n    _this = _super.call(this, props);\n    _this.state = {\n      key: Date.now(),\n      areButtonsVisible: false\n    };\n    _this.isFirstTime = true;\n    _this.tabsetRef = React.createRef();\n    _this.resizeTarget = React.createRef();\n    _this.registerTab = _this.registerTab.bind(_assertThisInitialized(_this));\n    _this.unRegisterTab = _this.unRegisterTab.bind(_assertThisInitialized(_this));\n    _this.updateTab = _this.updateTab.bind(_assertThisInitialized(_this));\n    _this.handleKeyPressed = _this.handleKeyPressed.bind(_assertThisInitialized(_this));\n    _this.handleLeftButtonClick = _this.handleLeftButtonClick.bind(_assertThisInitialized(_this));\n    _this.handleRightButtonClick = _this.handleRightButtonClick.bind(_assertThisInitialized(_this));\n    _this.updateButtonsVisibility = _this.updateButtonsVisibility.bind(_assertThisInitialized(_this));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_this));\n    _this.keyHandlerMap = (_this$keyHandlerMap = {}, _defineProperty(_this$keyHandlerMap, RIGHT_KEY, function () {\n      return _this.selectTab(RIGHT_SIDE);\n    }), _defineProperty(_this$keyHandlerMap, LEFT_KEY, function () {\n      return _this.selectTab(LEFT_SIDE);\n    }), _this$keyHandlerMap);\n    _this.tabsetChildren = [];\n    return _this;\n  }\n  _createClass(Tabset, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.widthObserver = new ResizeSensor(this.resizeTarget.current, debounce(this.updateButtonsVisibility, 100));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProp) {\n      var children = this.props.children;\n      var isFirstTime = this.isFirstTime;\n      var areAllChildrenRegistered = children.length === this.tabsetChildren.length;\n      if (isNotSameChildren(children, prevProp.children)) {\n        this.updateButtonsVisibility();\n      }\n      if (areAllChildrenRegistered && isFirstTime) {\n        this.updateButtonsVisibility();\n        this.isFirstTime = false;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.widthObserver.detach(this.resizeTarget.current);\n    }\n  }, {\n    key: \"setAsSelectedTab\",\n    value: function setAsSelectedTab(tabIndex) {\n      this.tabsetChildren[tabIndex].ref.click();\n      this.tabsetChildren[tabIndex].ref.focus();\n    }\n  }, {\n    key: \"updateButtonsVisibility\",\n    value: function updateButtonsVisibility() {\n      var _this$state = this.state,\n        areButtonsVisible = _this$state.areButtonsVisible,\n        variant = _this$state.variant;\n      var tabset = this.tabsetRef.current;\n      var resizeWidth = this.resizeTarget.current.offsetWidth;\n      var scrollWidth = tabset.scrollWidth,\n        scrollLeft = tabset.scrollLeft,\n        tabsetWidth = tabset.offsetWidth;\n      var childrenTotalWidth = getChildrenTotalWidth(this.tabsetChildren);\n      var buttonWidth = areButtonsVisible ? 94 : 0;\n      var padding = resizeWidth - tabsetWidth - buttonWidth;\n      var delta = variant === 'line' ? 0 : 1;\n      var showButtons = childrenTotalWidth > resizeWidth - padding + delta;\n      this.screenWidth = window.innerWidth;\n      this.scrollLeft = scrollLeft;\n      this.maxScroll = scrollWidth - tabsetWidth;\n      this.tabsetWidth = tabsetWidth;\n      this.setState({\n        areButtonsVisible: showButtons\n      });\n    }\n  }, {\n    key: \"handleKeyPressed\",\n    value: function handleKeyPressed(event) {\n      if (this.keyHandlerMap[event.keyCode]) {\n        return this.keyHandlerMap[event.keyCode]();\n      }\n      return null;\n    }\n  }, {\n    key: \"selectTab\",\n    value: function selectTab(side) {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.tabsetChildren;\n      var activeTabIndex = getTabIndexFromName(tabsetChildren, activeTabName);\n      if (activeTabIndex === tabsetChildren.length - 1 && side === RIGHT_SIDE) {\n        this.setAsSelectedTab(0);\n      } else if (activeTabIndex === 0 && side === LEFT_SIDE) {\n        this.setAsSelectedTab(tabsetChildren.length - 1);\n      } else {\n        this.setAsSelectedTab(activeTabIndex + side);\n      }\n    }\n  }, {\n    key: \"isLeftButtonDisabled\",\n    value: function isLeftButtonDisabled() {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.tabsetChildren;\n      var screenWidth = this.screenWidth,\n        scrollLeft = this.scrollLeft;\n      return getLeftButtonDisabledState({\n        activeTabName: activeTabName,\n        tabsetChildren: tabsetChildren,\n        screenWidth: screenWidth,\n        scrollLeft: scrollLeft\n      });\n    }\n  }, {\n    key: \"isRightButtonDisabled\",\n    value: function isRightButtonDisabled() {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.tabsetChildren;\n      var screenWidth = this.screenWidth,\n        scrollLeft = this.scrollLeft,\n        maxScroll = this.maxScroll;\n      return getRightButtonDisabledState({\n        activeTabName: activeTabName,\n        tabsetChildren: tabsetChildren,\n        screenWidth: screenWidth,\n        scrollLeft: scrollLeft,\n        maxScroll: maxScroll\n      });\n    }\n  }, {\n    key: \"handleRightButtonClick\",\n    value: function handleRightButtonClick() {\n      var screenWidth = this.screenWidth,\n        tabsetWidth = this.tabsetWidth,\n        scrollLeft = this.scrollLeft;\n      if (screenWidth > 600) {\n        return this.tabsetRef.current.scrollTo(scrollLeft + tabsetWidth, 0);\n      }\n      return this.selectTab(RIGHT_SIDE);\n    }\n  }, {\n    key: \"handleLeftButtonClick\",\n    value: function handleLeftButtonClick() {\n      var screenWidth = this.screenWidth,\n        tabsetWidth = this.tabsetWidth,\n        scrollLeft = this.scrollLeft;\n      if (screenWidth > 600) {\n        return this.tabsetRef.current.scrollTo(scrollLeft - tabsetWidth, 0);\n      }\n      return this.selectTab(LEFT_SIDE);\n    }\n  }, {\n    key: \"updateTab\",\n    value: function updateTab(tab, nameToUpdate) {\n      var tabsetChildren = this.tabsetChildren;\n      var newTabsetChildren = getUpdatedTabsetChildren(tabsetChildren, tab, nameToUpdate);\n      this.tabsetChildren = newTabsetChildren;\n      this.setState({\n        key: Date.now()\n      });\n    }\n  }, {\n    key: \"registerTab\",\n    value: function registerTab(tab) {\n      var tabsetChildren = this.tabsetChildren;\n      var _getChildTabNodes = getChildTabNodes(this.tabsetRef.current),\n        _getChildTabNodes2 = _toArray(_getChildTabNodes),\n        nodes = _getChildTabNodes2.slice(0);\n      var newChildrenRefs = insertChildOrderly(tabsetChildren, tab, nodes);\n      this.tabsetChildren = newChildrenRefs;\n      this.setState({\n        key: Date.now()\n      });\n    }\n  }, {\n    key: \"unRegisterTab\",\n    value: function unRegisterTab(tabName) {\n      var tabsetChildren = this.tabsetChildren;\n      var newTabsetChildren = tabsetChildren.filter(function (tab) {\n        return tab.name !== tabName;\n      });\n      this.tabsetChildren = newTabsetChildren;\n      this.setState({\n        key: Date.now()\n      });\n    }\n  }, {\n    key: \"scrollToSelectedTab\",\n    value: function scrollToSelectedTab(name) {\n      var tabsetChildren = this.tabsetChildren;\n      var tabset = this.tabsetRef.current;\n      var scrollLeft = tabset.scrollLeft,\n        tabsetWidth = tabset.offsetWidth;\n      var tabIndex = getTabIndexFromName(tabsetChildren, name);\n      var isFirstTab = tabIndex === 0;\n      if (isFirstTab) {\n        this.tabsetRef.current.scrollTo(0, 0);\n      } else {\n        var totalWidthUpToCurrentTab = getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex + 1);\n        var totalWidthUpToPrevTab = getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex);\n        var tabsetWidthUpToCurrentTab = tabsetWidth + scrollLeft;\n        var isCurrentTabOutOfViewOnRightSide = totalWidthUpToCurrentTab > tabsetWidthUpToCurrentTab - 20;\n        var isCurrentTabOutOfViewOnLeftSide = scrollLeft > totalWidthUpToPrevTab;\n        if (isCurrentTabOutOfViewOnLeftSide) {\n          this.tabsetRef.current.scrollTo(totalWidthUpToPrevTab, 0);\n        }\n        if (isCurrentTabOutOfViewOnRightSide) {\n          var moveScroll = totalWidthUpToCurrentTab - tabsetWidthUpToCurrentTab + 20;\n          this.tabsetRef.current.scrollTo(scrollLeft + moveScroll, 0);\n        }\n      }\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(event, name) {\n      var onSelect = this.props.onSelect;\n      this.scrollToSelectedTab(name);\n      onSelect(event, name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        activeTabName = _this$props.activeTabName,\n        fullWidth = _this$props.fullWidth,\n        variant = _this$props.variant,\n        children = _this$props.children,\n        style = _this$props.style,\n        className = _this$props.className,\n        id = _this$props.id;\n      var areButtonsVisible = this.state.areButtonsVisible;\n      var screenWidth = this.screenWidth;\n      var showButtons = areButtonsVisible || screenWidth < 600;\n      var context = {\n        activeTabName: activeTabName,\n        onSelect: this.handleSelect,\n        privateRegisterTab: this.registerTab,\n        privateUnRegisterTab: this.unRegisterTab,\n        privateUpdateTab: this.updateTab,\n        fullWidth: fullWidth,\n        variant: variant\n      };\n      return React.createElement(StyledContainer, {\n        variant: variant,\n        className: className,\n        style: style,\n        id: id\n      }, React.createElement(StyledObserver, {\n        ref: this.resizeTarget\n      }), React.createElement(StyledTabset, {\n        variant: variant\n      }, React.createElement(StyledInnerContainer, {\n        fullWidth: fullWidth,\n        role: \"tablist\",\n        onKeyDown: this.handleKeyPressed,\n        onScroll: this.updateButtonsVisibility,\n        ref: this.tabsetRef\n      }, React.createElement(Provider, {\n        value: context\n      }, children)), React.createElement(RenderIf, {\n        isTrue: showButtons\n      }, React.createElement(StyledButtonGroup, null, React.createElement(StyledButtonIcon, {\n        icon: React.createElement(LeftThinChevron, null),\n        disabled: this.isLeftButtonDisabled(),\n        onClick: this.handleLeftButtonClick,\n        assistiveText: \"previus tab button\",\n        variant: \"border-filled\"\n      }), React.createElement(StyledButtonIcon, {\n        icon: React.createElement(RightThinChevron, null),\n        disabled: this.isRightButtonDisabled(),\n        onClick: this.handleRightButtonClick,\n        assistiveText: \"next tab button\",\n        variant: \"border-filled\"\n      })))));\n    }\n  }]);\n  return Tabset;\n}(Component);\nexport { Tabset as default };\nTabset.propTypes = {\n  activeTabName: PropTypes.string,\n  onSelect: PropTypes.func,\n  fullWidth: PropTypes.bool,\n  variant: PropTypes.oneOf(['card', 'line']),\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.node\n};\nTabset.defaultProps = {\n  activeTabName: undefined,\n  onSelect: function onSelect() {},\n  fullWidth: false,\n  variant: 'card',\n  className: undefined,\n  style: undefined,\n  children: null,\n  id: undefined\n};","map":{"version":3,"names":["_toArray","_defineProperty","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","React","Component","PropTypes","Provider","RenderIf","LEFT_KEY","RIGHT_KEY","getChildTabNodes","insertChildOrderly","getTabIndexFromName","getChildrenTotalWidth","getChildrenTotalWidthUpToClickedTab","isNotSameChildren","getUpdatedTabsetChildren","getRightButtonDisabledState","getLeftButtonDisabledState","RightThinChevron","LeftThinChevron","ResizeSensor","debounce","StyledContainer","StyledObserver","StyledTabset","StyledInnerContainer","StyledButtonGroup","StyledButtonIcon","RIGHT_SIDE","LEFT_SIDE","Tabset","_Component","_super","props","_this$keyHandlerMap","_this","state","key","Date","now","areButtonsVisible","isFirstTime","tabsetRef","createRef","resizeTarget","registerTab","bind","unRegisterTab","updateTab","handleKeyPressed","handleLeftButtonClick","handleRightButtonClick","updateButtonsVisibility","handleSelect","keyHandlerMap","selectTab","tabsetChildren","value","componentDidMount","widthObserver","current","componentDidUpdate","prevProp","children","areAllChildrenRegistered","length","componentWillUnmount","detach","setAsSelectedTab","tabIndex","ref","click","focus","_this$state","variant","tabset","resizeWidth","offsetWidth","scrollWidth","scrollLeft","tabsetWidth","childrenTotalWidth","buttonWidth","padding","delta","showButtons","screenWidth","window","innerWidth","maxScroll","setState","event","keyCode","side","activeTabName","activeTabIndex","isLeftButtonDisabled","isRightButtonDisabled","scrollTo","tab","nameToUpdate","newTabsetChildren","_getChildTabNodes","_getChildTabNodes2","nodes","slice","newChildrenRefs","tabName","filter","name","scrollToSelectedTab","isFirstTab","totalWidthUpToCurrentTab","totalWidthUpToPrevTab","tabsetWidthUpToCurrentTab","isCurrentTabOutOfViewOnRightSide","isCurrentTabOutOfViewOnLeftSide","moveScroll","onSelect","render","_this$props","fullWidth","style","className","id","context","privateRegisterTab","privateUnRegisterTab","privateUpdateTab","createElement","role","onKeyDown","onScroll","isTrue","icon","disabled","onClick","assistiveText","default","propTypes","string","func","bool","oneOf","object","node","defaultProps","undefined"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/Tabset/index.js"],"sourcesContent":["import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './context';\nimport RenderIf from '../RenderIf';\nimport { LEFT_KEY, RIGHT_KEY } from '../../libs/constants';\nimport { getChildTabNodes, insertChildOrderly, getTabIndexFromName, getChildrenTotalWidth, getChildrenTotalWidthUpToClickedTab, isNotSameChildren, getUpdatedTabsetChildren, getRightButtonDisabledState, getLeftButtonDisabledState } from './utils';\nimport RightThinChevron from './rightThinChevron';\nimport LeftThinChevron from './leftThinChevron';\nimport ResizeSensor from '../../libs/ResizeSensor';\nimport debounce from '../../libs/debounce';\nimport StyledContainer from './styled/container';\nimport StyledObserver from './styled/observer';\nimport StyledTabset from './styled/tabset';\nimport StyledInnerContainer from './styled/innerContainer';\nimport StyledButtonGroup from './styled/buttonGroup';\nimport StyledButtonIcon from './styled/buttonIcon';\nvar RIGHT_SIDE = 1;\nvar LEFT_SIDE = -1;\n\nvar Tabset = function (_Component) {\n  _inherits(Tabset, _Component);\n\n  var _super = _createSuper(Tabset);\n\n  function Tabset(props) {\n    var _this$keyHandlerMap;\n\n    var _this;\n\n    _classCallCheck(this, Tabset);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      key: Date.now(),\n      areButtonsVisible: false\n    };\n    _this.isFirstTime = true;\n    _this.tabsetRef = React.createRef();\n    _this.resizeTarget = React.createRef();\n    _this.registerTab = _this.registerTab.bind(_assertThisInitialized(_this));\n    _this.unRegisterTab = _this.unRegisterTab.bind(_assertThisInitialized(_this));\n    _this.updateTab = _this.updateTab.bind(_assertThisInitialized(_this));\n    _this.handleKeyPressed = _this.handleKeyPressed.bind(_assertThisInitialized(_this));\n    _this.handleLeftButtonClick = _this.handleLeftButtonClick.bind(_assertThisInitialized(_this));\n    _this.handleRightButtonClick = _this.handleRightButtonClick.bind(_assertThisInitialized(_this));\n    _this.updateButtonsVisibility = _this.updateButtonsVisibility.bind(_assertThisInitialized(_this));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_this));\n    _this.keyHandlerMap = (_this$keyHandlerMap = {}, _defineProperty(_this$keyHandlerMap, RIGHT_KEY, function () {\n      return _this.selectTab(RIGHT_SIDE);\n    }), _defineProperty(_this$keyHandlerMap, LEFT_KEY, function () {\n      return _this.selectTab(LEFT_SIDE);\n    }), _this$keyHandlerMap);\n    _this.tabsetChildren = [];\n    return _this;\n  }\n\n  _createClass(Tabset, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.widthObserver = new ResizeSensor(this.resizeTarget.current, debounce(this.updateButtonsVisibility, 100));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProp) {\n      var children = this.props.children;\n      var isFirstTime = this.isFirstTime;\n      var areAllChildrenRegistered = children.length === this.tabsetChildren.length;\n\n      if (isNotSameChildren(children, prevProp.children)) {\n        this.updateButtonsVisibility();\n      }\n\n      if (areAllChildrenRegistered && isFirstTime) {\n        this.updateButtonsVisibility();\n        this.isFirstTime = false;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.widthObserver.detach(this.resizeTarget.current);\n    }\n  }, {\n    key: \"setAsSelectedTab\",\n    value: function setAsSelectedTab(tabIndex) {\n      this.tabsetChildren[tabIndex].ref.click();\n      this.tabsetChildren[tabIndex].ref.focus();\n    }\n  }, {\n    key: \"updateButtonsVisibility\",\n    value: function updateButtonsVisibility() {\n      var _this$state = this.state,\n          areButtonsVisible = _this$state.areButtonsVisible,\n          variant = _this$state.variant;\n      var tabset = this.tabsetRef.current;\n      var resizeWidth = this.resizeTarget.current.offsetWidth;\n      var scrollWidth = tabset.scrollWidth,\n          scrollLeft = tabset.scrollLeft,\n          tabsetWidth = tabset.offsetWidth;\n      var childrenTotalWidth = getChildrenTotalWidth(this.tabsetChildren);\n      var buttonWidth = areButtonsVisible ? 94 : 0;\n      var padding = resizeWidth - tabsetWidth - buttonWidth;\n      var delta = variant === 'line' ? 0 : 1;\n      var showButtons = childrenTotalWidth > resizeWidth - padding + delta;\n      this.screenWidth = window.innerWidth;\n      this.scrollLeft = scrollLeft;\n      this.maxScroll = scrollWidth - tabsetWidth;\n      this.tabsetWidth = tabsetWidth;\n      this.setState({\n        areButtonsVisible: showButtons\n      });\n    }\n  }, {\n    key: \"handleKeyPressed\",\n    value: function handleKeyPressed(event) {\n      if (this.keyHandlerMap[event.keyCode]) {\n        return this.keyHandlerMap[event.keyCode]();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"selectTab\",\n    value: function selectTab(side) {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.tabsetChildren;\n      var activeTabIndex = getTabIndexFromName(tabsetChildren, activeTabName);\n\n      if (activeTabIndex === tabsetChildren.length - 1 && side === RIGHT_SIDE) {\n        this.setAsSelectedTab(0);\n      } else if (activeTabIndex === 0 && side === LEFT_SIDE) {\n        this.setAsSelectedTab(tabsetChildren.length - 1);\n      } else {\n        this.setAsSelectedTab(activeTabIndex + side);\n      }\n    }\n  }, {\n    key: \"isLeftButtonDisabled\",\n    value: function isLeftButtonDisabled() {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.tabsetChildren;\n      var screenWidth = this.screenWidth,\n          scrollLeft = this.scrollLeft;\n      return getLeftButtonDisabledState({\n        activeTabName: activeTabName,\n        tabsetChildren: tabsetChildren,\n        screenWidth: screenWidth,\n        scrollLeft: scrollLeft\n      });\n    }\n  }, {\n    key: \"isRightButtonDisabled\",\n    value: function isRightButtonDisabled() {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.tabsetChildren;\n      var screenWidth = this.screenWidth,\n          scrollLeft = this.scrollLeft,\n          maxScroll = this.maxScroll;\n      return getRightButtonDisabledState({\n        activeTabName: activeTabName,\n        tabsetChildren: tabsetChildren,\n        screenWidth: screenWidth,\n        scrollLeft: scrollLeft,\n        maxScroll: maxScroll\n      });\n    }\n  }, {\n    key: \"handleRightButtonClick\",\n    value: function handleRightButtonClick() {\n      var screenWidth = this.screenWidth,\n          tabsetWidth = this.tabsetWidth,\n          scrollLeft = this.scrollLeft;\n\n      if (screenWidth > 600) {\n        return this.tabsetRef.current.scrollTo(scrollLeft + tabsetWidth, 0);\n      }\n\n      return this.selectTab(RIGHT_SIDE);\n    }\n  }, {\n    key: \"handleLeftButtonClick\",\n    value: function handleLeftButtonClick() {\n      var screenWidth = this.screenWidth,\n          tabsetWidth = this.tabsetWidth,\n          scrollLeft = this.scrollLeft;\n\n      if (screenWidth > 600) {\n        return this.tabsetRef.current.scrollTo(scrollLeft - tabsetWidth, 0);\n      }\n\n      return this.selectTab(LEFT_SIDE);\n    }\n  }, {\n    key: \"updateTab\",\n    value: function updateTab(tab, nameToUpdate) {\n      var tabsetChildren = this.tabsetChildren;\n      var newTabsetChildren = getUpdatedTabsetChildren(tabsetChildren, tab, nameToUpdate);\n      this.tabsetChildren = newTabsetChildren;\n      this.setState({\n        key: Date.now()\n      });\n    }\n  }, {\n    key: \"registerTab\",\n    value: function registerTab(tab) {\n      var tabsetChildren = this.tabsetChildren;\n\n      var _getChildTabNodes = getChildTabNodes(this.tabsetRef.current),\n          _getChildTabNodes2 = _toArray(_getChildTabNodes),\n          nodes = _getChildTabNodes2.slice(0);\n\n      var newChildrenRefs = insertChildOrderly(tabsetChildren, tab, nodes);\n      this.tabsetChildren = newChildrenRefs;\n      this.setState({\n        key: Date.now()\n      });\n    }\n  }, {\n    key: \"unRegisterTab\",\n    value: function unRegisterTab(tabName) {\n      var tabsetChildren = this.tabsetChildren;\n      var newTabsetChildren = tabsetChildren.filter(function (tab) {\n        return tab.name !== tabName;\n      });\n      this.tabsetChildren = newTabsetChildren;\n      this.setState({\n        key: Date.now()\n      });\n    }\n  }, {\n    key: \"scrollToSelectedTab\",\n    value: function scrollToSelectedTab(name) {\n      var tabsetChildren = this.tabsetChildren;\n      var tabset = this.tabsetRef.current;\n      var scrollLeft = tabset.scrollLeft,\n          tabsetWidth = tabset.offsetWidth;\n      var tabIndex = getTabIndexFromName(tabsetChildren, name);\n      var isFirstTab = tabIndex === 0;\n\n      if (isFirstTab) {\n        this.tabsetRef.current.scrollTo(0, 0);\n      } else {\n        var totalWidthUpToCurrentTab = getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex + 1);\n        var totalWidthUpToPrevTab = getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex);\n        var tabsetWidthUpToCurrentTab = tabsetWidth + scrollLeft;\n        var isCurrentTabOutOfViewOnRightSide = totalWidthUpToCurrentTab > tabsetWidthUpToCurrentTab - 20;\n        var isCurrentTabOutOfViewOnLeftSide = scrollLeft > totalWidthUpToPrevTab;\n\n        if (isCurrentTabOutOfViewOnLeftSide) {\n          this.tabsetRef.current.scrollTo(totalWidthUpToPrevTab, 0);\n        }\n\n        if (isCurrentTabOutOfViewOnRightSide) {\n          var moveScroll = totalWidthUpToCurrentTab - tabsetWidthUpToCurrentTab + 20;\n          this.tabsetRef.current.scrollTo(scrollLeft + moveScroll, 0);\n        }\n      }\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(event, name) {\n      var onSelect = this.props.onSelect;\n      this.scrollToSelectedTab(name);\n      onSelect(event, name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          activeTabName = _this$props.activeTabName,\n          fullWidth = _this$props.fullWidth,\n          variant = _this$props.variant,\n          children = _this$props.children,\n          style = _this$props.style,\n          className = _this$props.className,\n          id = _this$props.id;\n      var areButtonsVisible = this.state.areButtonsVisible;\n      var screenWidth = this.screenWidth;\n      var showButtons = areButtonsVisible || screenWidth < 600;\n      var context = {\n        activeTabName: activeTabName,\n        onSelect: this.handleSelect,\n        privateRegisterTab: this.registerTab,\n        privateUnRegisterTab: this.unRegisterTab,\n        privateUpdateTab: this.updateTab,\n        fullWidth: fullWidth,\n        variant: variant\n      };\n      return React.createElement(StyledContainer, {\n        variant: variant,\n        className: className,\n        style: style,\n        id: id\n      }, React.createElement(StyledObserver, {\n        ref: this.resizeTarget\n      }), React.createElement(StyledTabset, {\n        variant: variant\n      }, React.createElement(StyledInnerContainer, {\n        fullWidth: fullWidth,\n        role: \"tablist\",\n        onKeyDown: this.handleKeyPressed,\n        onScroll: this.updateButtonsVisibility,\n        ref: this.tabsetRef\n      }, React.createElement(Provider, {\n        value: context\n      }, children)), React.createElement(RenderIf, {\n        isTrue: showButtons\n      }, React.createElement(StyledButtonGroup, null, React.createElement(StyledButtonIcon, {\n        icon: React.createElement(LeftThinChevron, null),\n        disabled: this.isLeftButtonDisabled(),\n        onClick: this.handleLeftButtonClick,\n        assistiveText: \"previus tab button\",\n        variant: \"border-filled\"\n      }), React.createElement(StyledButtonIcon, {\n        icon: React.createElement(RightThinChevron, null),\n        disabled: this.isRightButtonDisabled(),\n        onClick: this.handleRightButtonClick,\n        assistiveText: \"next tab button\",\n        variant: \"border-filled\"\n      })))));\n    }\n  }]);\n\n  return Tabset;\n}(Component);\n\nexport { Tabset as default };\nTabset.propTypes = {\n  activeTabName: PropTypes.string,\n  onSelect: PropTypes.func,\n  fullWidth: PropTypes.bool,\n  variant: PropTypes.oneOf(['card', 'line']),\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.node\n};\nTabset.defaultProps = {\n  activeTabName: undefined,\n  onSelect: function onSelect() {},\n  fullWidth: false,\n  variant: 'card',\n  className: undefined,\n  style: undefined,\n  children: null,\n  id: undefined\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}