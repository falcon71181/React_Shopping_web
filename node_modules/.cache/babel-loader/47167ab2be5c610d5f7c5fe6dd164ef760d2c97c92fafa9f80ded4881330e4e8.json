{"ast":null,"code":"'use strict';\n\nvar trim = require('trim');\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/strong');\nmodule.exports = strong;\nstrong.locator = locate;\nvar backslash = '\\\\';\nvar asterisk = '*';\nvar underscore = '_';\nfunction strong(eat, value, silent) {\n  var self = this;\n  var index = 0;\n  var character = value.charAt(index);\n  var now;\n  var pedantic;\n  var marker;\n  var queue;\n  var subvalue;\n  var length;\n  var previous;\n  if (character !== asterisk && character !== underscore || value.charAt(++index) !== character) {\n    return;\n  }\n  pedantic = self.options.pedantic;\n  marker = character;\n  subvalue = marker + marker;\n  length = value.length;\n  index++;\n  queue = '';\n  character = '';\n  if (pedantic && whitespace(value.charAt(index))) {\n    return;\n  }\n  while (index < length) {\n    previous = character;\n    character = value.charAt(index);\n    if (character === marker && value.charAt(index + 1) === marker && (!pedantic || !whitespace(previous))) {\n      character = value.charAt(index + 2);\n      if (character !== marker) {\n        if (!trim(queue)) {\n          return;\n        }\n\n        /* istanbul ignore if - never used (yet) */\n        if (silent) {\n          return true;\n        }\n        now = eat.now();\n        now.column += 2;\n        now.offset += 2;\n        return eat(subvalue + queue + subvalue)({\n          type: 'strong',\n          children: self.tokenizeInline(queue, now)\n        });\n      }\n    }\n    if (!pedantic && character === backslash) {\n      queue += character;\n      character = value.charAt(++index);\n    }\n    queue += character;\n    index++;\n  }\n}","map":{"version":3,"names":["trim","require","whitespace","locate","module","exports","strong","locator","backslash","asterisk","underscore","eat","value","silent","self","index","character","charAt","now","pedantic","marker","queue","subvalue","length","previous","options","column","offset","type","children","tokenizeInline"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/strong.js"],"sourcesContent":["'use strict'\n\nvar trim = require('trim')\nvar whitespace = require('is-whitespace-character')\nvar locate = require('../locate/strong')\n\nmodule.exports = strong\nstrong.locator = locate\n\nvar backslash = '\\\\'\nvar asterisk = '*'\nvar underscore = '_'\n\nfunction strong(eat, value, silent) {\n  var self = this\n  var index = 0\n  var character = value.charAt(index)\n  var now\n  var pedantic\n  var marker\n  var queue\n  var subvalue\n  var length\n  var previous\n\n  if (\n    (character !== asterisk && character !== underscore) ||\n    value.charAt(++index) !== character\n  ) {\n    return\n  }\n\n  pedantic = self.options.pedantic\n  marker = character\n  subvalue = marker + marker\n  length = value.length\n  index++\n  queue = ''\n  character = ''\n\n  if (pedantic && whitespace(value.charAt(index))) {\n    return\n  }\n\n  while (index < length) {\n    previous = character\n    character = value.charAt(index)\n\n    if (\n      character === marker &&\n      value.charAt(index + 1) === marker &&\n      (!pedantic || !whitespace(previous))\n    ) {\n      character = value.charAt(index + 2)\n\n      if (character !== marker) {\n        if (!trim(queue)) {\n          return\n        }\n\n        /* istanbul ignore if - never used (yet) */\n        if (silent) {\n          return true\n        }\n\n        now = eat.now()\n        now.column += 2\n        now.offset += 2\n\n        return eat(subvalue + queue + subvalue)({\n          type: 'strong',\n          children: self.tokenizeInline(queue, now)\n        })\n      }\n    }\n\n    if (!pedantic && character === backslash) {\n      queue += character\n      character = value.charAt(++index)\n    }\n\n    queue += character\n    index++\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,UAAU,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACnD,IAAIE,MAAM,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAExCG,MAAM,CAACC,OAAO,GAAGC,MAAM;AACvBA,MAAM,CAACC,OAAO,GAAGJ,MAAM;AAEvB,IAAIK,SAAS,GAAG,IAAI;AACpB,IAAIC,QAAQ,GAAG,GAAG;AAClB,IAAIC,UAAU,GAAG,GAAG;AAEpB,SAASJ,MAAMA,CAACK,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EAClC,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAACF,KAAK,CAAC;EACnC,IAAIG,GAAG;EACP,IAAIC,QAAQ;EACZ,IAAIC,MAAM;EACV,IAAIC,KAAK;EACT,IAAIC,QAAQ;EACZ,IAAIC,MAAM;EACV,IAAIC,QAAQ;EAEZ,IACGR,SAAS,KAAKP,QAAQ,IAAIO,SAAS,KAAKN,UAAU,IACnDE,KAAK,CAACK,MAAM,CAAC,EAAEF,KAAK,CAAC,KAAKC,SAAS,EACnC;IACA;EACF;EAEAG,QAAQ,GAAGL,IAAI,CAACW,OAAO,CAACN,QAAQ;EAChCC,MAAM,GAAGJ,SAAS;EAClBM,QAAQ,GAAGF,MAAM,GAAGA,MAAM;EAC1BG,MAAM,GAAGX,KAAK,CAACW,MAAM;EACrBR,KAAK,EAAE;EACPM,KAAK,GAAG,EAAE;EACVL,SAAS,GAAG,EAAE;EAEd,IAAIG,QAAQ,IAAIjB,UAAU,CAACU,KAAK,CAACK,MAAM,CAACF,KAAK,CAAC,CAAC,EAAE;IAC/C;EACF;EAEA,OAAOA,KAAK,GAAGQ,MAAM,EAAE;IACrBC,QAAQ,GAAGR,SAAS;IACpBA,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAACF,KAAK,CAAC;IAE/B,IACEC,SAAS,KAAKI,MAAM,IACpBR,KAAK,CAACK,MAAM,CAACF,KAAK,GAAG,CAAC,CAAC,KAAKK,MAAM,KACjC,CAACD,QAAQ,IAAI,CAACjB,UAAU,CAACsB,QAAQ,CAAC,CAAC,EACpC;MACAR,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAACF,KAAK,GAAG,CAAC,CAAC;MAEnC,IAAIC,SAAS,KAAKI,MAAM,EAAE;QACxB,IAAI,CAACpB,IAAI,CAACqB,KAAK,CAAC,EAAE;UAChB;QACF;;QAEA;QACA,IAAIR,MAAM,EAAE;UACV,OAAO,IAAI;QACb;QAEAK,GAAG,GAAGP,GAAG,CAACO,GAAG,CAAC,CAAC;QACfA,GAAG,CAACQ,MAAM,IAAI,CAAC;QACfR,GAAG,CAACS,MAAM,IAAI,CAAC;QAEf,OAAOhB,GAAG,CAACW,QAAQ,GAAGD,KAAK,GAAGC,QAAQ,CAAC,CAAC;UACtCM,IAAI,EAAE,QAAQ;UACdC,QAAQ,EAAEf,IAAI,CAACgB,cAAc,CAACT,KAAK,EAAEH,GAAG;QAC1C,CAAC,CAAC;MACJ;IACF;IAEA,IAAI,CAACC,QAAQ,IAAIH,SAAS,KAAKR,SAAS,EAAE;MACxCa,KAAK,IAAIL,SAAS;MAClBA,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAAC,EAAEF,KAAK,CAAC;IACnC;IAEAM,KAAK,IAAIL,SAAS;IAClBD,KAAK,EAAE;EACT;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}