{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\nvar removePosition = require('unist-util-remove-position');\nmodule.exports = parse;\nvar lineFeed = '\\n';\nvar lineBreaksExpression = /\\r\\n|\\r/g;\n\n// Parse the bound file.\nfunction parse() {\n  var self = this;\n  var value = String(self.file);\n  var start = {\n    line: 1,\n    column: 1,\n    offset: 0\n  };\n  var content = xtend(start);\n  var node;\n\n  // Clean non-unix newlines: `\\r\\n` and `\\r` are all changed to `\\n`.\n  // This should not affect positional information.\n  value = value.replace(lineBreaksExpression, lineFeed);\n\n  // BOM.\n  if (value.charCodeAt(0) === 0xfeff) {\n    value = value.slice(1);\n    content.column++;\n    content.offset++;\n  }\n  node = {\n    type: 'root',\n    children: self.tokenizeBlock(value, content),\n    position: {\n      start: start,\n      end: self.eof || xtend(start)\n    }\n  };\n  if (!self.options.position) {\n    removePosition(node, true);\n  }\n  return node;\n}","map":{"version":3,"names":["xtend","require","removePosition","module","exports","parse","lineFeed","lineBreaksExpression","self","value","String","file","start","line","column","offset","content","node","replace","charCodeAt","slice","type","children","tokenizeBlock","position","end","eof","options"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/parse.js"],"sourcesContent":["'use strict'\n\nvar xtend = require('xtend')\nvar removePosition = require('unist-util-remove-position')\n\nmodule.exports = parse\n\nvar lineFeed = '\\n'\nvar lineBreaksExpression = /\\r\\n|\\r/g\n\n// Parse the bound file.\nfunction parse() {\n  var self = this\n  var value = String(self.file)\n  var start = {line: 1, column: 1, offset: 0}\n  var content = xtend(start)\n  var node\n\n  // Clean non-unix newlines: `\\r\\n` and `\\r` are all changed to `\\n`.\n  // This should not affect positional information.\n  value = value.replace(lineBreaksExpression, lineFeed)\n\n  // BOM.\n  if (value.charCodeAt(0) === 0xfeff) {\n    value = value.slice(1)\n\n    content.column++\n    content.offset++\n  }\n\n  node = {\n    type: 'root',\n    children: self.tokenizeBlock(value, content),\n    position: {start: start, end: self.eof || xtend(start)}\n  }\n\n  if (!self.options.position) {\n    removePosition(node, true)\n  }\n\n  return node\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIC,cAAc,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAE1DE,MAAM,CAACC,OAAO,GAAGC,KAAK;AAEtB,IAAIC,QAAQ,GAAG,IAAI;AACnB,IAAIC,oBAAoB,GAAG,UAAU;;AAErC;AACA,SAASF,KAAKA,CAAA,EAAG;EACf,IAAIG,IAAI,GAAG,IAAI;EACf,IAAIC,KAAK,GAAGC,MAAM,CAACF,IAAI,CAACG,IAAI,CAAC;EAC7B,IAAIC,KAAK,GAAG;IAACC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAC,CAAC;EAC3C,IAAIC,OAAO,GAAGhB,KAAK,CAACY,KAAK,CAAC;EAC1B,IAAIK,IAAI;;EAER;EACA;EACAR,KAAK,GAAGA,KAAK,CAACS,OAAO,CAACX,oBAAoB,EAAED,QAAQ,CAAC;;EAErD;EACA,IAAIG,KAAK,CAACU,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;IAClCV,KAAK,GAAGA,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC;IAEtBJ,OAAO,CAACF,MAAM,EAAE;IAChBE,OAAO,CAACD,MAAM,EAAE;EAClB;EAEAE,IAAI,GAAG;IACLI,IAAI,EAAE,MAAM;IACZC,QAAQ,EAAEd,IAAI,CAACe,aAAa,CAACd,KAAK,EAAEO,OAAO,CAAC;IAC5CQ,QAAQ,EAAE;MAACZ,KAAK,EAAEA,KAAK;MAAEa,GAAG,EAAEjB,IAAI,CAACkB,GAAG,IAAI1B,KAAK,CAACY,KAAK;IAAC;EACxD,CAAC;EAED,IAAI,CAACJ,IAAI,CAACmB,OAAO,CAACH,QAAQ,EAAE;IAC1BtB,cAAc,CAACe,IAAI,EAAE,IAAI,CAAC;EAC5B;EAEA,OAAOA,IAAI;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}