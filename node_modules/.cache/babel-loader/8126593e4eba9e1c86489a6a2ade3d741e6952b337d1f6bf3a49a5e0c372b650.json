{"ast":null,"code":"import { useCallback } from 'react';\nimport { addDays, addMonths, isSameMonth, getFirstDayMonth, isDateBelowLimit, isDateBeyondLimit, getCalendarBounds, getSign } from '../../helpers';\nexport default function useMoveFocusedDayFunction(focusedDate, currentMonth, minDate, maxDate) {\n  return useCallback(function (increment) {\n    var _getCalendarBounds = getCalendarBounds(minDate, maxDate),\n      minCalendarDate = _getCalendarBounds.minCalendarDate,\n      maxCalendarDate = _getCalendarBounds.maxCalendarDate;\n    var nextFocusedDate = addDays(focusedDate, increment);\n    var nextFocusedMonth = isSameMonth(nextFocusedDate, currentMonth) ? currentMonth : getFirstDayMonth(addMonths(currentMonth, getSign(increment)));\n    if (isDateBelowLimit(nextFocusedDate, minCalendarDate)) {\n      return {\n        day: minCalendarDate,\n        month: getFirstDayMonth(minCalendarDate)\n      };\n    }\n    if (isDateBeyondLimit(nextFocusedDate, maxCalendarDate)) {\n      return {\n        day: maxCalendarDate,\n        month: getFirstDayMonth(maxCalendarDate)\n      };\n    }\n    return {\n      day: nextFocusedDate,\n      month: nextFocusedMonth\n    };\n  }, [focusedDate, currentMonth, minDate, maxDate]);\n}","map":{"version":3,"names":["useCallback","addDays","addMonths","isSameMonth","getFirstDayMonth","isDateBelowLimit","isDateBeyondLimit","getCalendarBounds","getSign","useMoveFocusedDayFunction","focusedDate","currentMonth","minDate","maxDate","increment","_getCalendarBounds","minCalendarDate","maxCalendarDate","nextFocusedDate","nextFocusedMonth","day","month"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/Calendar/doubleCalendar/hooks/useMoveFocusedDay.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { addDays, addMonths, isSameMonth, getFirstDayMonth, isDateBelowLimit, isDateBeyondLimit, getCalendarBounds, getSign } from '../../helpers';\nexport default function useMoveFocusedDayFunction(focusedDate, currentMonth, minDate, maxDate) {\n  return useCallback(function (increment) {\n    var _getCalendarBounds = getCalendarBounds(minDate, maxDate),\n        minCalendarDate = _getCalendarBounds.minCalendarDate,\n        maxCalendarDate = _getCalendarBounds.maxCalendarDate;\n\n    var nextFocusedDate = addDays(focusedDate, increment);\n    var nextFocusedMonth = isSameMonth(nextFocusedDate, currentMonth) ? currentMonth : getFirstDayMonth(addMonths(currentMonth, getSign(increment)));\n\n    if (isDateBelowLimit(nextFocusedDate, minCalendarDate)) {\n      return {\n        day: minCalendarDate,\n        month: getFirstDayMonth(minCalendarDate)\n      };\n    }\n\n    if (isDateBeyondLimit(nextFocusedDate, maxCalendarDate)) {\n      return {\n        day: maxCalendarDate,\n        month: getFirstDayMonth(maxCalendarDate)\n      };\n    }\n\n    return {\n      day: nextFocusedDate,\n      month: nextFocusedMonth\n    };\n  }, [focusedDate, currentMonth, minDate, maxDate]);\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,OAAO,QAAQ,eAAe;AAClJ,eAAe,SAASC,yBAAyBA,CAACC,WAAW,EAAEC,YAAY,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC7F,OAAOb,WAAW,CAAC,UAAUc,SAAS,EAAE;IACtC,IAAIC,kBAAkB,GAAGR,iBAAiB,CAACK,OAAO,EAAEC,OAAO,CAAC;MACxDG,eAAe,GAAGD,kBAAkB,CAACC,eAAe;MACpDC,eAAe,GAAGF,kBAAkB,CAACE,eAAe;IAExD,IAAIC,eAAe,GAAGjB,OAAO,CAACS,WAAW,EAAEI,SAAS,CAAC;IACrD,IAAIK,gBAAgB,GAAGhB,WAAW,CAACe,eAAe,EAAEP,YAAY,CAAC,GAAGA,YAAY,GAAGP,gBAAgB,CAACF,SAAS,CAACS,YAAY,EAAEH,OAAO,CAACM,SAAS,CAAC,CAAC,CAAC;IAEhJ,IAAIT,gBAAgB,CAACa,eAAe,EAAEF,eAAe,CAAC,EAAE;MACtD,OAAO;QACLI,GAAG,EAAEJ,eAAe;QACpBK,KAAK,EAAEjB,gBAAgB,CAACY,eAAe;MACzC,CAAC;IACH;IAEA,IAAIV,iBAAiB,CAACY,eAAe,EAAED,eAAe,CAAC,EAAE;MACvD,OAAO;QACLG,GAAG,EAAEH,eAAe;QACpBI,KAAK,EAAEjB,gBAAgB,CAACa,eAAe;MACzC,CAAC;IACH;IAEA,OAAO;MACLG,GAAG,EAAEF,eAAe;MACpBG,KAAK,EAAEF;IACT,CAAC;EACH,CAAC,EAAE,CAACT,WAAW,EAAEC,YAAY,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}