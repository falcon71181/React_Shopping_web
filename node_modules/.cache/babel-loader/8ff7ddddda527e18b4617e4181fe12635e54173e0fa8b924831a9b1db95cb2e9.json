{"ast":null,"code":"'use strict';\n\n// A line containing no characters, or a line containing only spaces (U+0020) or\n// tabs (U+0009), is called a blank line.\n// See <https://spec.commonmark.org/0.29/#blank-line>.\nvar reBlankLine = /^[ \\t]*(\\n|$)/;\n\n// Note that though blank lines play a special role in lists to determine\n// whether the list is tight or loose\n// (<https://spec.commonmark.org/0.29/#blank-lines>), it’s done by the list\n// tokenizer and this blank line tokenizer does not have to be responsible for\n// that.\n// Therefore, configs such as `blankLine.notInList` do not have to be set here.\nmodule.exports = blankLine;\nfunction blankLine(eat, value, silent) {\n  var match;\n  var subvalue = '';\n  var index = 0;\n  var length = value.length;\n  while (index < length) {\n    match = reBlankLine.exec(value.slice(index));\n    if (match == null) {\n      break;\n    }\n    index += match[0].length;\n    subvalue += match[0];\n  }\n  if (subvalue === '') {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n  eat(subvalue);\n}","map":{"version":3,"names":["reBlankLine","module","exports","blankLine","eat","value","silent","match","subvalue","index","length","exec","slice"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/blank-line.js"],"sourcesContent":["'use strict'\n\n// A line containing no characters, or a line containing only spaces (U+0020) or\n// tabs (U+0009), is called a blank line.\n// See <https://spec.commonmark.org/0.29/#blank-line>.\nvar reBlankLine = /^[ \\t]*(\\n|$)/\n\n// Note that though blank lines play a special role in lists to determine\n// whether the list is tight or loose\n// (<https://spec.commonmark.org/0.29/#blank-lines>), it’s done by the list\n// tokenizer and this blank line tokenizer does not have to be responsible for\n// that.\n// Therefore, configs such as `blankLine.notInList` do not have to be set here.\nmodule.exports = blankLine\n\nfunction blankLine(eat, value, silent) {\n  var match\n  var subvalue = ''\n  var index = 0\n  var length = value.length\n\n  while (index < length) {\n    match = reBlankLine.exec(value.slice(index))\n\n    if (match == null) {\n      break\n    }\n\n    index += match[0].length\n    subvalue += match[0]\n  }\n\n  if (subvalue === '') {\n    return\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true\n  }\n\n  eat(subvalue)\n}\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA,IAAIA,WAAW,GAAG,eAAe;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAGC,SAAS;AAE1B,SAASA,SAASA,CAACC,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACrC,IAAIC,KAAK;EACT,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,MAAM,GAAGL,KAAK,CAACK,MAAM;EAEzB,OAAOD,KAAK,GAAGC,MAAM,EAAE;IACrBH,KAAK,GAAGP,WAAW,CAACW,IAAI,CAACN,KAAK,CAACO,KAAK,CAACH,KAAK,CAAC,CAAC;IAE5C,IAAIF,KAAK,IAAI,IAAI,EAAE;MACjB;IACF;IAEAE,KAAK,IAAIF,KAAK,CAAC,CAAC,CAAC,CAACG,MAAM;IACxBF,QAAQ,IAAID,KAAK,CAAC,CAAC,CAAC;EACtB;EAEA,IAAIC,QAAQ,KAAK,EAAE,EAAE;IACnB;EACF;;EAEA;EACA,IAAIF,MAAM,EAAE;IACV,OAAO,IAAI;EACb;EAEAF,GAAG,CAACI,QAAQ,CAAC;AACf"},"metadata":{},"sourceType":"script","externalDependencies":[]}