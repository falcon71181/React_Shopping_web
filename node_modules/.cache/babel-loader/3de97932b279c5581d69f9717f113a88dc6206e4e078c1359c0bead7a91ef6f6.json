{"ast":null,"code":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar decode = require('parse-entities');\nvar locate = require('../locate/tag');\nmodule.exports = autoLink;\nautoLink.locator = locate;\nautoLink.notInLink = true;\nvar lessThan = '<';\nvar greaterThan = '>';\nvar atSign = '@';\nvar slash = '/';\nvar mailto = 'mailto:';\nvar mailtoLength = mailto.length;\nfunction autoLink(eat, value, silent) {\n  var self = this;\n  var subvalue = '';\n  var length = value.length;\n  var index = 0;\n  var queue = '';\n  var hasAtCharacter = false;\n  var link = '';\n  var character;\n  var now;\n  var content;\n  var tokenizers;\n  var exit;\n  if (value.charAt(0) !== lessThan) {\n    return;\n  }\n  index++;\n  subvalue = lessThan;\n  while (index < length) {\n    character = value.charAt(index);\n    if (whitespace(character) || character === greaterThan || character === atSign || character === ':' && value.charAt(index + 1) === slash) {\n      break;\n    }\n    queue += character;\n    index++;\n  }\n  if (!queue) {\n    return;\n  }\n  link += queue;\n  queue = '';\n  character = value.charAt(index);\n  link += character;\n  index++;\n  if (character === atSign) {\n    hasAtCharacter = true;\n  } else {\n    if (character !== ':' || value.charAt(index + 1) !== slash) {\n      return;\n    }\n    link += slash;\n    index++;\n  }\n  while (index < length) {\n    character = value.charAt(index);\n    if (whitespace(character) || character === greaterThan) {\n      break;\n    }\n    queue += character;\n    index++;\n  }\n  character = value.charAt(index);\n  if (!queue || character !== greaterThan) {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n  link += queue;\n  content = link;\n  subvalue += link + character;\n  now = eat.now();\n  now.column++;\n  now.offset++;\n  if (hasAtCharacter) {\n    if (link.slice(0, mailtoLength).toLowerCase() === mailto) {\n      content = content.slice(mailtoLength);\n      now.column += mailtoLength;\n      now.offset += mailtoLength;\n    } else {\n      link = mailto + link;\n    }\n  }\n\n  // Temporarily remove all tokenizers except text in autolinks.\n  tokenizers = self.inlineTokenizers;\n  self.inlineTokenizers = {\n    text: tokenizers.text\n  };\n  exit = self.enterLink();\n  content = self.tokenizeInline(content, now);\n  self.inlineTokenizers = tokenizers;\n  exit();\n  return eat(subvalue)({\n    type: 'link',\n    title: null,\n    url: decode(link, {\n      nonTerminated: false\n    }),\n    children: content\n  });\n}","map":{"version":3,"names":["whitespace","require","decode","locate","module","exports","autoLink","locator","notInLink","lessThan","greaterThan","atSign","slash","mailto","mailtoLength","length","eat","value","silent","self","subvalue","index","queue","hasAtCharacter","link","character","now","content","tokenizers","exit","charAt","column","offset","slice","toLowerCase","inlineTokenizers","text","enterLink","tokenizeInline","type","title","url","nonTerminated","children"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/auto-link.js"],"sourcesContent":["'use strict'\n\nvar whitespace = require('is-whitespace-character')\nvar decode = require('parse-entities')\nvar locate = require('../locate/tag')\n\nmodule.exports = autoLink\nautoLink.locator = locate\nautoLink.notInLink = true\n\nvar lessThan = '<'\nvar greaterThan = '>'\nvar atSign = '@'\nvar slash = '/'\nvar mailto = 'mailto:'\nvar mailtoLength = mailto.length\n\nfunction autoLink(eat, value, silent) {\n  var self = this\n  var subvalue = ''\n  var length = value.length\n  var index = 0\n  var queue = ''\n  var hasAtCharacter = false\n  var link = ''\n  var character\n  var now\n  var content\n  var tokenizers\n  var exit\n\n  if (value.charAt(0) !== lessThan) {\n    return\n  }\n\n  index++\n  subvalue = lessThan\n\n  while (index < length) {\n    character = value.charAt(index)\n\n    if (\n      whitespace(character) ||\n      character === greaterThan ||\n      character === atSign ||\n      (character === ':' && value.charAt(index + 1) === slash)\n    ) {\n      break\n    }\n\n    queue += character\n    index++\n  }\n\n  if (!queue) {\n    return\n  }\n\n  link += queue\n  queue = ''\n\n  character = value.charAt(index)\n  link += character\n  index++\n\n  if (character === atSign) {\n    hasAtCharacter = true\n  } else {\n    if (character !== ':' || value.charAt(index + 1) !== slash) {\n      return\n    }\n\n    link += slash\n    index++\n  }\n\n  while (index < length) {\n    character = value.charAt(index)\n\n    if (whitespace(character) || character === greaterThan) {\n      break\n    }\n\n    queue += character\n    index++\n  }\n\n  character = value.charAt(index)\n\n  if (!queue || character !== greaterThan) {\n    return\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true\n  }\n\n  link += queue\n  content = link\n  subvalue += link + character\n  now = eat.now()\n  now.column++\n  now.offset++\n\n  if (hasAtCharacter) {\n    if (link.slice(0, mailtoLength).toLowerCase() === mailto) {\n      content = content.slice(mailtoLength)\n      now.column += mailtoLength\n      now.offset += mailtoLength\n    } else {\n      link = mailto + link\n    }\n  }\n\n  // Temporarily remove all tokenizers except text in autolinks.\n  tokenizers = self.inlineTokenizers\n  self.inlineTokenizers = {text: tokenizers.text}\n\n  exit = self.enterLink()\n\n  content = self.tokenizeInline(content, now)\n\n  self.inlineTokenizers = tokenizers\n  exit()\n\n  return eat(subvalue)({\n    type: 'link',\n    title: null,\n    url: decode(link, {nonTerminated: false}),\n    children: content\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}