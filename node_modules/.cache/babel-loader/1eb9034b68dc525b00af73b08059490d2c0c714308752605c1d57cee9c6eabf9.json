{"ast":null,"code":"'use strict';\n\nvar alphabetical = require('is-alphabetical');\nvar locate = require('../locate/tag');\nvar tag = require('../util/html').tag;\nmodule.exports = inlineHTML;\ninlineHTML.locator = locate;\nvar lessThan = '<';\nvar questionMark = '?';\nvar exclamationMark = '!';\nvar slash = '/';\nvar htmlLinkOpenExpression = /^<a /i;\nvar htmlLinkCloseExpression = /^<\\/a>/i;\nfunction inlineHTML(eat, value, silent) {\n  var self = this;\n  var length = value.length;\n  var character;\n  var subvalue;\n  if (value.charAt(0) !== lessThan || length < 3) {\n    return;\n  }\n  character = value.charAt(1);\n  if (!alphabetical(character) && character !== questionMark && character !== exclamationMark && character !== slash) {\n    return;\n  }\n  subvalue = value.match(tag);\n  if (!subvalue) {\n    return;\n  }\n\n  /* istanbul ignore if - not used yet. */\n  if (silent) {\n    return true;\n  }\n  subvalue = subvalue[0];\n  if (!self.inLink && htmlLinkOpenExpression.test(subvalue)) {\n    self.inLink = true;\n  } else if (self.inLink && htmlLinkCloseExpression.test(subvalue)) {\n    self.inLink = false;\n  }\n  return eat(subvalue)({\n    type: 'html',\n    value: subvalue\n  });\n}","map":{"version":3,"names":["alphabetical","require","locate","tag","module","exports","inlineHTML","locator","lessThan","questionMark","exclamationMark","slash","htmlLinkOpenExpression","htmlLinkCloseExpression","eat","value","silent","self","length","character","subvalue","charAt","match","inLink","test","type"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/html-inline.js"],"sourcesContent":["'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar locate = require('../locate/tag')\nvar tag = require('../util/html').tag\n\nmodule.exports = inlineHTML\ninlineHTML.locator = locate\n\nvar lessThan = '<'\nvar questionMark = '?'\nvar exclamationMark = '!'\nvar slash = '/'\n\nvar htmlLinkOpenExpression = /^<a /i\nvar htmlLinkCloseExpression = /^<\\/a>/i\n\nfunction inlineHTML(eat, value, silent) {\n  var self = this\n  var length = value.length\n  var character\n  var subvalue\n\n  if (value.charAt(0) !== lessThan || length < 3) {\n    return\n  }\n\n  character = value.charAt(1)\n\n  if (\n    !alphabetical(character) &&\n    character !== questionMark &&\n    character !== exclamationMark &&\n    character !== slash\n  ) {\n    return\n  }\n\n  subvalue = value.match(tag)\n\n  if (!subvalue) {\n    return\n  }\n\n  /* istanbul ignore if - not used yet. */\n  if (silent) {\n    return true\n  }\n\n  subvalue = subvalue[0]\n\n  if (!self.inLink && htmlLinkOpenExpression.test(subvalue)) {\n    self.inLink = true\n  } else if (self.inLink && htmlLinkCloseExpression.test(subvalue)) {\n    self.inLink = false\n  }\n\n  return eat(subvalue)({type: 'html', value: subvalue})\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC7C,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAe,CAAC;AACrC,IAAIE,GAAG,GAAGF,OAAO,CAAC,cAAc,CAAC,CAACE,GAAG;AAErCC,MAAM,CAACC,OAAO,GAAGC,UAAU;AAC3BA,UAAU,CAACC,OAAO,GAAGL,MAAM;AAE3B,IAAIM,QAAQ,GAAG,GAAG;AAClB,IAAIC,YAAY,GAAG,GAAG;AACtB,IAAIC,eAAe,GAAG,GAAG;AACzB,IAAIC,KAAK,GAAG,GAAG;AAEf,IAAIC,sBAAsB,GAAG,OAAO;AACpC,IAAIC,uBAAuB,GAAG,SAAS;AAEvC,SAASP,UAAUA,CAACQ,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACtC,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,MAAM,GAAGH,KAAK,CAACG,MAAM;EACzB,IAAIC,SAAS;EACb,IAAIC,QAAQ;EAEZ,IAAIL,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC,KAAKb,QAAQ,IAAIU,MAAM,GAAG,CAAC,EAAE;IAC9C;EACF;EAEAC,SAAS,GAAGJ,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC;EAE3B,IACE,CAACrB,YAAY,CAACmB,SAAS,CAAC,IACxBA,SAAS,KAAKV,YAAY,IAC1BU,SAAS,KAAKT,eAAe,IAC7BS,SAAS,KAAKR,KAAK,EACnB;IACA;EACF;EAEAS,QAAQ,GAAGL,KAAK,CAACO,KAAK,CAACnB,GAAG,CAAC;EAE3B,IAAI,CAACiB,QAAQ,EAAE;IACb;EACF;;EAEA;EACA,IAAIJ,MAAM,EAAE;IACV,OAAO,IAAI;EACb;EAEAI,QAAQ,GAAGA,QAAQ,CAAC,CAAC,CAAC;EAEtB,IAAI,CAACH,IAAI,CAACM,MAAM,IAAIX,sBAAsB,CAACY,IAAI,CAACJ,QAAQ,CAAC,EAAE;IACzDH,IAAI,CAACM,MAAM,GAAG,IAAI;EACpB,CAAC,MAAM,IAAIN,IAAI,CAACM,MAAM,IAAIV,uBAAuB,CAACW,IAAI,CAACJ,QAAQ,CAAC,EAAE;IAChEH,IAAI,CAACM,MAAM,GAAG,KAAK;EACrB;EAEA,OAAOT,GAAG,CAACM,QAAQ,CAAC,CAAC;IAACK,IAAI,EAAE,MAAM;IAAEV,KAAK,EAAEK;EAAQ,CAAC,CAAC;AACvD"},"metadata":{},"sourceType":"script","externalDependencies":[]}