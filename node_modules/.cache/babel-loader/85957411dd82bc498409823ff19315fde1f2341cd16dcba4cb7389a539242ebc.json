{"ast":null,"code":"'use strict';\n\nvar attributeName = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = '[^\"\\'=<>`\\\\u0000-\\\\u0020]+';\nvar singleQuoted = \"'[^']*'\";\nvar doubleQuoted = '\"[^\"]*\"';\nvar attributeValue = '(?:' + unquoted + '|' + singleQuoted + '|' + doubleQuoted + ')';\nvar attribute = '(?:\\\\s+' + attributeName + '(?:\\\\s*=\\\\s*' + attributeValue + ')?)';\nvar openTag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar closeTag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?].*?[?]>';\nvar declaration = '<![A-Za-z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nexports.openCloseTag = new RegExp('^(?:' + openTag + '|' + closeTag + ')');\nexports.tag = new RegExp('^(?:' + openTag + '|' + closeTag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');","map":{"version":3,"names":["attributeName","unquoted","singleQuoted","doubleQuoted","attributeValue","attribute","openTag","closeTag","comment","processing","declaration","cdata","exports","openCloseTag","RegExp","tag"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/util/html.js"],"sourcesContent":["'use strict'\n\nvar attributeName = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\nvar unquoted = '[^\"\\'=<>`\\\\u0000-\\\\u0020]+'\nvar singleQuoted = \"'[^']*'\"\nvar doubleQuoted = '\"[^\"]*\"'\nvar attributeValue =\n  '(?:' + unquoted + '|' + singleQuoted + '|' + doubleQuoted + ')'\nvar attribute =\n  '(?:\\\\s+' + attributeName + '(?:\\\\s*=\\\\s*' + attributeValue + ')?)'\nvar openTag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\nvar closeTag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->'\nvar processing = '<[?].*?[?]>'\nvar declaration = '<![A-Za-z]+\\\\s+[^>]*>'\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nexports.openCloseTag = new RegExp('^(?:' + openTag + '|' + closeTag + ')')\n\nexports.tag = new RegExp(\n  '^(?:' +\n    openTag +\n    '|' +\n    closeTag +\n    '|' +\n    comment +\n    '|' +\n    processing +\n    '|' +\n    declaration +\n    '|' +\n    cdata +\n    ')'\n)\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,aAAa,GAAG,4BAA4B;AAChD,IAAIC,QAAQ,GAAG,4BAA4B;AAC3C,IAAIC,YAAY,GAAG,SAAS;AAC5B,IAAIC,YAAY,GAAG,SAAS;AAC5B,IAAIC,cAAc,GAChB,KAAK,GAAGH,QAAQ,GAAG,GAAG,GAAGC,YAAY,GAAG,GAAG,GAAGC,YAAY,GAAG,GAAG;AAClE,IAAIE,SAAS,GACX,SAAS,GAAGL,aAAa,GAAG,cAAc,GAAGI,cAAc,GAAG,KAAK;AACrE,IAAIE,OAAO,GAAG,0BAA0B,GAAGD,SAAS,GAAG,YAAY;AACnE,IAAIE,QAAQ,GAAG,kCAAkC;AACjD,IAAIC,OAAO,GAAG,uCAAuC;AACrD,IAAIC,UAAU,GAAG,aAAa;AAC9B,IAAIC,WAAW,GAAG,uBAAuB;AACzC,IAAIC,KAAK,GAAG,gCAAgC;AAE5CC,OAAO,CAACC,YAAY,GAAG,IAAIC,MAAM,CAAC,MAAM,GAAGR,OAAO,GAAG,GAAG,GAAGC,QAAQ,GAAG,GAAG,CAAC;AAE1EK,OAAO,CAACG,GAAG,GAAG,IAAID,MAAM,CACtB,MAAM,GACJR,OAAO,GACP,GAAG,GACHC,QAAQ,GACR,GAAG,GACHC,OAAO,GACP,GAAG,GACHC,UAAU,GACV,GAAG,GACHC,WAAW,GACX,GAAG,GACHC,KAAK,GACL,GACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}