{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './context';\nimport TreeChildren from './treeChildren';\nimport TreeContainerUl from './styled/treeContainerUl';\nimport getNode from './helpers/getNode';\nimport useKeyNavigation from './hooks/useKeyNavigation';\nimport useTreeNodesAsPlainList from './hooks/useTreeNodesAsPlainList';\nexport default function Tree(props) {\n  var data = props.data,\n    onNodeExpand = props.onNodeExpand,\n    onNodeCheck = props.onNodeCheck,\n    onNodeSelect = props.onNodeSelect,\n    selectedNode = props.selectedNode,\n    className = props.className,\n    style = props.style,\n    id = props.id,\n    ariaLabel = props.ariaLabel,\n    ariaLabelledBy = props.ariaLabelledBy;\n  var visibleNodes = useTreeNodesAsPlainList(data);\n  var _useKeyNavigation = useKeyNavigation({\n      visibleNodes: visibleNodes,\n      selectedNode: selectedNode,\n      onNodeSelect: onNodeSelect,\n      onNodeExpand: onNodeExpand\n    }),\n    autoFocus = _useKeyNavigation.autoFocus,\n    focusedNode = _useKeyNavigation.focusedNode,\n    setFocusedNode = _useKeyNavigation.setFocusedNode,\n    clearFocusedNode = _useKeyNavigation.clearFocusedNode,\n    keyDownHandler = _useKeyNavigation.keyDownHandler;\n  var treeData = Array.isArray(data) ? data : [];\n  return React.createElement(Provider, {\n    value: {\n      autoFocus: autoFocus,\n      focusedNode: focusedNode,\n      onPrivateFocusNode: setFocusedNode,\n      onPrivateBlurNode: clearFocusedNode,\n      onPrivateKeyDown: keyDownHandler\n    }\n  }, React.createElement(TreeContainerUl, {\n    className: className,\n    style: style,\n    id: id,\n    role: \"tree\",\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-label\": ariaLabel\n  }, React.createElement(TreeChildren, {\n    data: treeData,\n    onNodeExpand: onNodeExpand,\n    onNodeCheck: onNodeCheck,\n    nodePath: [],\n    selectedNode: selectedNode,\n    onNodeSelect: onNodeSelect\n  })));\n}\nTree.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node,\n    icon: PropTypes.node,\n    isExpanded: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isChecked: PropTypes.oneOf([true, false, 'indeterminate']),\n    children: PropTypes.array\n  })),\n  onNodeExpand: PropTypes.func,\n  onNodeCheck: PropTypes.func,\n  onNodeSelect: PropTypes.func,\n  selectedNode: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  id: PropTypes.string,\n  ariaLabelledBy: PropTypes.string,\n  ariaLabel: PropTypes.string\n};\nTree.defaultProps = {\n  data: [],\n  onNodeExpand: function onNodeExpand() {},\n  onNodeCheck: function onNodeCheck() {},\n  onNodeSelect: function onNodeSelect() {},\n  selectedNode: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  ariaLabelledBy: undefined,\n  ariaLabel: undefined\n};\nTree.getNode = getNode;","map":{"version":3,"names":["React","PropTypes","Provider","TreeChildren","TreeContainerUl","getNode","useKeyNavigation","useTreeNodesAsPlainList","Tree","props","data","onNodeExpand","onNodeCheck","onNodeSelect","selectedNode","className","style","id","ariaLabel","ariaLabelledBy","visibleNodes","_useKeyNavigation","autoFocus","focusedNode","setFocusedNode","clearFocusedNode","keyDownHandler","treeData","Array","isArray","createElement","value","onPrivateFocusNode","onPrivateBlurNode","onPrivateKeyDown","role","nodePath","propTypes","arrayOf","shape","label","node","icon","isExpanded","bool","isLoading","isChecked","oneOf","children","array","func","string","object","defaultProps","undefined"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/Tree/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './context';\nimport TreeChildren from './treeChildren';\nimport TreeContainerUl from './styled/treeContainerUl';\nimport getNode from './helpers/getNode';\nimport useKeyNavigation from './hooks/useKeyNavigation';\nimport useTreeNodesAsPlainList from './hooks/useTreeNodesAsPlainList';\nexport default function Tree(props) {\n  var data = props.data,\n      onNodeExpand = props.onNodeExpand,\n      onNodeCheck = props.onNodeCheck,\n      onNodeSelect = props.onNodeSelect,\n      selectedNode = props.selectedNode,\n      className = props.className,\n      style = props.style,\n      id = props.id,\n      ariaLabel = props.ariaLabel,\n      ariaLabelledBy = props.ariaLabelledBy;\n  var visibleNodes = useTreeNodesAsPlainList(data);\n\n  var _useKeyNavigation = useKeyNavigation({\n    visibleNodes: visibleNodes,\n    selectedNode: selectedNode,\n    onNodeSelect: onNodeSelect,\n    onNodeExpand: onNodeExpand\n  }),\n      autoFocus = _useKeyNavigation.autoFocus,\n      focusedNode = _useKeyNavigation.focusedNode,\n      setFocusedNode = _useKeyNavigation.setFocusedNode,\n      clearFocusedNode = _useKeyNavigation.clearFocusedNode,\n      keyDownHandler = _useKeyNavigation.keyDownHandler;\n\n  var treeData = Array.isArray(data) ? data : [];\n  return React.createElement(Provider, {\n    value: {\n      autoFocus: autoFocus,\n      focusedNode: focusedNode,\n      onPrivateFocusNode: setFocusedNode,\n      onPrivateBlurNode: clearFocusedNode,\n      onPrivateKeyDown: keyDownHandler\n    }\n  }, React.createElement(TreeContainerUl, {\n    className: className,\n    style: style,\n    id: id,\n    role: \"tree\",\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-label\": ariaLabel\n  }, React.createElement(TreeChildren, {\n    data: treeData,\n    onNodeExpand: onNodeExpand,\n    onNodeCheck: onNodeCheck,\n    nodePath: [],\n    selectedNode: selectedNode,\n    onNodeSelect: onNodeSelect\n  })));\n}\nTree.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node,\n    icon: PropTypes.node,\n    isExpanded: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isChecked: PropTypes.oneOf([true, false, 'indeterminate']),\n    children: PropTypes.array\n  })),\n  onNodeExpand: PropTypes.func,\n  onNodeCheck: PropTypes.func,\n  onNodeSelect: PropTypes.func,\n  selectedNode: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  id: PropTypes.string,\n  ariaLabelledBy: PropTypes.string,\n  ariaLabel: PropTypes.string\n};\nTree.defaultProps = {\n  data: [],\n  onNodeExpand: function onNodeExpand() {},\n  onNodeCheck: function onNodeCheck() {},\n  onNodeSelect: function onNodeSelect() {},\n  selectedNode: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  ariaLabelledBy: undefined,\n  ariaLabel: undefined\n};\nTree.getNode = getNode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}