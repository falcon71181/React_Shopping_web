{"ast":null,"code":"'use strict';\n\nvar mdast2hast = require('mdast-util-to-hast');\nmodule.exports = remark2rehype;\n\n// Attacher.\n// If a destination is given, runs the destination with the new hast tree\n// (bridge mode).\n// Without destination, returns the tree: further plugins run on that tree\n// (mutate mode).\nfunction remark2rehype(destination, options) {\n  if (destination && !destination.process) {\n    options = destination;\n    destination = null;\n  }\n  return destination ? bridge(destination, options) : mutate(options);\n}\n\n// Bridge mode.\n// Runs the destination with the new hast tree.\nfunction bridge(destination, options) {\n  return transformer;\n  function transformer(node, file, next) {\n    destination.run(mdast2hast(node, options), file, done);\n    function done(err) {\n      next(err);\n    }\n  }\n}\n\n// Mutate-mode.\n// Further transformers run on the hast tree.\nfunction mutate(options) {\n  return transformer;\n  function transformer(node) {\n    return mdast2hast(node, options);\n  }\n}","map":{"version":3,"names":["mdast2hast","require","module","exports","remark2rehype","destination","options","process","bridge","mutate","transformer","node","file","next","run","done","err"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-rehype/index.js"],"sourcesContent":["'use strict'\n\nvar mdast2hast = require('mdast-util-to-hast')\n\nmodule.exports = remark2rehype\n\n// Attacher.\n// If a destination is given, runs the destination with the new hast tree\n// (bridge mode).\n// Without destination, returns the tree: further plugins run on that tree\n// (mutate mode).\nfunction remark2rehype(destination, options) {\n  if (destination && !destination.process) {\n    options = destination\n    destination = null\n  }\n\n  return destination ? bridge(destination, options) : mutate(options)\n}\n\n// Bridge mode.\n// Runs the destination with the new hast tree.\nfunction bridge(destination, options) {\n  return transformer\n\n  function transformer(node, file, next) {\n    destination.run(mdast2hast(node, options), file, done)\n\n    function done(err) {\n      next(err)\n    }\n  }\n}\n\n// Mutate-mode.\n// Further transformers run on the hast tree.\nfunction mutate(options) {\n  return transformer\n\n  function transformer(node) {\n    return mdast2hast(node, options)\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE9CC,MAAM,CAACC,OAAO,GAAGC,aAAa;;AAE9B;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAACC,WAAW,EAAEC,OAAO,EAAE;EAC3C,IAAID,WAAW,IAAI,CAACA,WAAW,CAACE,OAAO,EAAE;IACvCD,OAAO,GAAGD,WAAW;IACrBA,WAAW,GAAG,IAAI;EACpB;EAEA,OAAOA,WAAW,GAAGG,MAAM,CAACH,WAAW,EAAEC,OAAO,CAAC,GAAGG,MAAM,CAACH,OAAO,CAAC;AACrE;;AAEA;AACA;AACA,SAASE,MAAMA,CAACH,WAAW,EAAEC,OAAO,EAAE;EACpC,OAAOI,WAAW;EAElB,SAASA,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;IACrCR,WAAW,CAACS,GAAG,CAACd,UAAU,CAACW,IAAI,EAAEL,OAAO,CAAC,EAAEM,IAAI,EAAEG,IAAI,CAAC;IAEtD,SAASA,IAAIA,CAACC,GAAG,EAAE;MACjBH,IAAI,CAACG,GAAG,CAAC;IACX;EACF;AACF;;AAEA;AACA;AACA,SAASP,MAAMA,CAACH,OAAO,EAAE;EACvB,OAAOI,WAAW;EAElB,SAASA,WAAWA,CAACC,IAAI,EAAE;IACzB,OAAOX,UAAU,CAACW,IAAI,EAAEL,OAAO,CAAC;EAClC;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}