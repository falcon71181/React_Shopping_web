{"ast":null,"code":"import { useMemo } from 'react';\nexport default function useFocusedIndexState(value, length, disabled, readOnly) {\n  return useMemo(function () {\n    var canBeFocused = !disabled && !readOnly;\n    if (canBeFocused) {\n      var currentLength = value.join('').trim('').length;\n      var newFocusedIndex = currentLength < length ? currentLength : length - 1;\n      return newFocusedIndex;\n    }\n    return undefined;\n  }, [value, length, disabled, readOnly]);\n}","map":{"version":3,"names":["useMemo","useFocusedIndexState","value","length","disabled","readOnly","canBeFocused","currentLength","join","trim","newFocusedIndex","undefined"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/CodeInput/hooks/useFocusedIndexState.js"],"sourcesContent":["import { useMemo } from 'react';\nexport default function useFocusedIndexState(value, length, disabled, readOnly) {\n  return useMemo(function () {\n    var canBeFocused = !disabled && !readOnly;\n\n    if (canBeFocused) {\n      var currentLength = value.join('').trim('').length;\n      var newFocusedIndex = currentLength < length ? currentLength : length - 1;\n      return newFocusedIndex;\n    }\n\n    return undefined;\n  }, [value, length, disabled, readOnly]);\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,eAAe,SAASC,oBAAoBA,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EAC9E,OAAOL,OAAO,CAAC,YAAY;IACzB,IAAIM,YAAY,GAAG,CAACF,QAAQ,IAAI,CAACC,QAAQ;IAEzC,IAAIC,YAAY,EAAE;MAChB,IAAIC,aAAa,GAAGL,KAAK,CAACM,IAAI,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACN,MAAM;MAClD,IAAIO,eAAe,GAAGH,aAAa,GAAGJ,MAAM,GAAGI,aAAa,GAAGJ,MAAM,GAAG,CAAC;MACzE,OAAOO,eAAe;IACxB;IAEA,OAAOC,SAAS;EAClB,CAAC,EAAE,CAACT,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,CAAC,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}