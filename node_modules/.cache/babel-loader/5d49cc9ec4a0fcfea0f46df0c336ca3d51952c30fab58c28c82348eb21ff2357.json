{"ast":null,"code":"'use strict';\n\nmodule.exports = convert;\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return tagNameFactory(test);\n  }\n  if (test === null || test === undefined) {\n    return element;\n  }\n  if (typeof test === 'object') {\n    return any(test);\n  }\n  if (typeof test === 'function') {\n    return callFactory(test);\n  }\n  throw new Error('Expected function, string, or array as test');\n}\nfunction convertAll(tests) {\n  var length = tests.length;\n  var index = -1;\n  var results = [];\n  while (++index < length) {\n    results[index] = convert(tests[index]);\n  }\n  return results;\n}\nfunction any(tests) {\n  var checks = convertAll(tests);\n  var length = checks.length;\n  return matches;\n  function matches() {\n    var index = -1;\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n// Utility to convert a string a tag name check.\nfunction tagNameFactory(test) {\n  return tagName;\n  function tagName(node) {\n    return element(node) && node.tagName === test;\n  }\n}\n\n// Utility to convert a function check.\nfunction callFactory(test) {\n  return call;\n  function call(node) {\n    return element(node) && Boolean(test.apply(this, arguments));\n  }\n}\n\n// Utility to return true if this is an element.\nfunction element(node) {\n  return node && typeof node === 'object' && node.type === 'element' && typeof node.tagName === 'string';\n}","map":{"version":3,"names":["module","exports","convert","test","tagNameFactory","undefined","element","any","callFactory","Error","convertAll","tests","length","index","results","checks","matches","apply","arguments","tagName","node","call","Boolean","type"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/hast-util-is-element/convert.js"],"sourcesContent":["'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return tagNameFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return element\n  }\n\n  if (typeof test === 'object') {\n    return any(test)\n  }\n\n  if (typeof test === 'function') {\n    return callFactory(test)\n  }\n\n  throw new Error('Expected function, string, or array as test')\n}\n\nfunction convertAll(tests) {\n  var length = tests.length\n  var index = -1\n  var results = []\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\nfunction any(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string a tag name check.\nfunction tagNameFactory(test) {\n  return tagName\n\n  function tagName(node) {\n    return element(node) && node.tagName === test\n  }\n}\n\n// Utility to convert a function check.\nfunction callFactory(test) {\n  return call\n\n  function call(node) {\n    return element(node) && Boolean(test.apply(this, arguments))\n  }\n}\n\n// Utility to return true if this is an element.\nfunction element(node) {\n  return (\n    node &&\n    typeof node === 'object' &&\n    node.type === 'element' &&\n    typeof node.tagName === 'string'\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,OAAO;AAExB,SAASA,OAAOA,CAACC,IAAI,EAAE;EACrB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOC,cAAc,CAACD,IAAI,CAAC;EAC7B;EAEA,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAKE,SAAS,EAAE;IACvC,OAAOC,OAAO;EAChB;EAEA,IAAI,OAAOH,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOI,GAAG,CAACJ,IAAI,CAAC;EAClB;EAEA,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAOK,WAAW,CAACL,IAAI,CAAC;EAC1B;EAEA,MAAM,IAAIM,KAAK,CAAC,6CAA6C,CAAC;AAChE;AAEA,SAASC,UAAUA,CAACC,KAAK,EAAE;EACzB,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM;EACzB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,OAAO,GAAG,EAAE;EAEhB,OAAO,EAAED,KAAK,GAAGD,MAAM,EAAE;IACvBE,OAAO,CAACD,KAAK,CAAC,GAAGX,OAAO,CAACS,KAAK,CAACE,KAAK,CAAC,CAAC;EACxC;EAEA,OAAOC,OAAO;AAChB;AAEA,SAASP,GAAGA,CAACI,KAAK,EAAE;EAClB,IAAII,MAAM,GAAGL,UAAU,CAACC,KAAK,CAAC;EAC9B,IAAIC,MAAM,GAAGG,MAAM,CAACH,MAAM;EAE1B,OAAOI,OAAO;EAEd,SAASA,OAAOA,CAAA,EAAG;IACjB,IAAIH,KAAK,GAAG,CAAC,CAAC;IAEd,OAAO,EAAEA,KAAK,GAAGD,MAAM,EAAE;MACvB,IAAIG,MAAM,CAACF,KAAK,CAAC,CAACI,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,EAAE;QACxC,OAAO,IAAI;MACb;IACF;IAEA,OAAO,KAAK;EACd;AACF;;AAEA;AACA,SAASd,cAAcA,CAACD,IAAI,EAAE;EAC5B,OAAOgB,OAAO;EAEd,SAASA,OAAOA,CAACC,IAAI,EAAE;IACrB,OAAOd,OAAO,CAACc,IAAI,CAAC,IAAIA,IAAI,CAACD,OAAO,KAAKhB,IAAI;EAC/C;AACF;;AAEA;AACA,SAASK,WAAWA,CAACL,IAAI,EAAE;EACzB,OAAOkB,IAAI;EAEX,SAASA,IAAIA,CAACD,IAAI,EAAE;IAClB,OAAOd,OAAO,CAACc,IAAI,CAAC,IAAIE,OAAO,CAACnB,IAAI,CAACc,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAC;EAC9D;AACF;;AAEA;AACA,SAASZ,OAAOA,CAACc,IAAI,EAAE;EACrB,OACEA,IAAI,IACJ,OAAOA,IAAI,KAAK,QAAQ,IACxBA,IAAI,CAACG,IAAI,KAAK,SAAS,IACvB,OAAOH,IAAI,CAACD,OAAO,KAAK,QAAQ;AAEpC"},"metadata":{},"sourceType":"script","externalDependencies":[]}