{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useRef, useImperativeHandle } from 'react';\nimport { ColorPickerContext } from '../../context';\nimport { StyledFlexContainer } from '../../styled';\nimport StyledNumberInput from './styled';\nimport { recomposeColor, rgbaToHex, rgbToHsv, decomposeColor } from '../../../../styles/helpers/color';\nvar Rgba = React.forwardRef(function (_props, ref) {\n  var _ref = useContext(ColorPickerContext) || {},\n    rgba = _ref.rgba,\n    hsv = _ref.hsv,\n    hex = _ref.hex,\n    tabIndex = _ref.tabIndex,\n    onChange = _ref.onChange;\n  var firstRef = useRef();\n  var lastRef = useRef();\n  var isAlphaEmpty = useRef(false);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        firstRef.current.focus();\n      },\n      click: function click() {\n        firstRef.current.click();\n      },\n      blur: function blur() {\n        lastRef.current.blur();\n      }\n    };\n  });\n  var handleAlphaChange = function handleAlphaChange(event) {\n    isAlphaEmpty.current = event.target.value === '';\n    var value = parseInt(event.target.value, 10);\n    var newApha = isNaN(value) ? 0 : Math.max(0, Math.min(value, 100)) / 100;\n    rgba[3] = newApha;\n    onChange({\n      hex: hex,\n      rgba: rgba,\n      hsv: hsv\n    });\n  };\n  var handleChange = function handleChange(index, event) {\n    var value = parseInt(event.target.value, 10);\n    if (isNaN(value)) {\n      rgba[index] = 0;\n    } else {\n      rgba[index] = Math.max(0, Math.min(value, 255));\n    }\n    var rgbaColor = recomposeColor({\n      type: 'rgba',\n      values: rgba\n    });\n    onChange({\n      hex: \"#\".concat(rgbaToHex(rgbaColor)),\n      rgba: rgba,\n      hsv: decomposeColor(rgbToHsv(rgbaColor)).values\n    });\n  };\n  var _rgba = _slicedToArray(rgba, 4),\n    r = _rgba[0],\n    g = _rgba[1],\n    b = _rgba[2],\n    a = _rgba[3];\n  var alpha = isAlphaEmpty.current ? '' : Math.round(a * 100);\n  return React.createElement(StyledFlexContainer, null, React.createElement(StyledNumberInput, {\n    type: \"number\",\n    value: r,\n    bottomHelpText: \"R\",\n    onChange: function onChange(event) {\n      return handleChange(0, event);\n    },\n    tabIndex: tabIndex,\n    ref: firstRef\n  }), React.createElement(StyledNumberInput, {\n    type: \"number\",\n    value: g,\n    bottomHelpText: \"G\",\n    onChange: function onChange(event) {\n      return handleChange(1, event);\n    },\n    tabIndex: tabIndex\n  }), React.createElement(StyledNumberInput, {\n    type: \"number\",\n    value: b,\n    bottomHelpText: \"B\",\n    onChange: function onChange(event) {\n      return handleChange(2, event);\n    },\n    tabIndex: tabIndex\n  }), React.createElement(StyledNumberInput, {\n    type: \"number\",\n    value: alpha,\n    bottomHelpText: \"ALPHA\",\n    onChange: handleAlphaChange,\n    tabIndex: tabIndex,\n    ref: lastRef\n  }));\n});\nexport default Rgba;","map":{"version":3,"names":["_slicedToArray","React","useContext","useRef","useImperativeHandle","ColorPickerContext","StyledFlexContainer","StyledNumberInput","recomposeColor","rgbaToHex","rgbToHsv","decomposeColor","Rgba","forwardRef","_props","ref","_ref","rgba","hsv","hex","tabIndex","onChange","firstRef","lastRef","isAlphaEmpty","focus","current","click","blur","handleAlphaChange","event","target","value","parseInt","newApha","isNaN","Math","max","min","handleChange","index","rgbaColor","type","values","concat","_rgba","r","g","b","a","alpha","round","createElement","bottomHelpText"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/ColorPicker/commons/rgba/index.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useRef, useImperativeHandle } from 'react';\nimport { ColorPickerContext } from '../../context';\nimport { StyledFlexContainer } from '../../styled';\nimport StyledNumberInput from './styled';\nimport { recomposeColor, rgbaToHex, rgbToHsv, decomposeColor } from '../../../../styles/helpers/color';\nvar Rgba = React.forwardRef(function (_props, ref) {\n  var _ref = useContext(ColorPickerContext) || {},\n      rgba = _ref.rgba,\n      hsv = _ref.hsv,\n      hex = _ref.hex,\n      tabIndex = _ref.tabIndex,\n      onChange = _ref.onChange;\n\n  var firstRef = useRef();\n  var lastRef = useRef();\n  var isAlphaEmpty = useRef(false);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        firstRef.current.focus();\n      },\n      click: function click() {\n        firstRef.current.click();\n      },\n      blur: function blur() {\n        lastRef.current.blur();\n      }\n    };\n  });\n\n  var handleAlphaChange = function handleAlphaChange(event) {\n    isAlphaEmpty.current = event.target.value === '';\n    var value = parseInt(event.target.value, 10);\n    var newApha = isNaN(value) ? 0 : Math.max(0, Math.min(value, 100)) / 100;\n    rgba[3] = newApha;\n    onChange({\n      hex: hex,\n      rgba: rgba,\n      hsv: hsv\n    });\n  };\n\n  var handleChange = function handleChange(index, event) {\n    var value = parseInt(event.target.value, 10);\n\n    if (isNaN(value)) {\n      rgba[index] = 0;\n    } else {\n      rgba[index] = Math.max(0, Math.min(value, 255));\n    }\n\n    var rgbaColor = recomposeColor({\n      type: 'rgba',\n      values: rgba\n    });\n    onChange({\n      hex: \"#\".concat(rgbaToHex(rgbaColor)),\n      rgba: rgba,\n      hsv: decomposeColor(rgbToHsv(rgbaColor)).values\n    });\n  };\n\n  var _rgba = _slicedToArray(rgba, 4),\n      r = _rgba[0],\n      g = _rgba[1],\n      b = _rgba[2],\n      a = _rgba[3];\n\n  var alpha = isAlphaEmpty.current ? '' : Math.round(a * 100);\n  return React.createElement(StyledFlexContainer, null, React.createElement(StyledNumberInput, {\n    type: \"number\",\n    value: r,\n    bottomHelpText: \"R\",\n    onChange: function onChange(event) {\n      return handleChange(0, event);\n    },\n    tabIndex: tabIndex,\n    ref: firstRef\n  }), React.createElement(StyledNumberInput, {\n    type: \"number\",\n    value: g,\n    bottomHelpText: \"G\",\n    onChange: function onChange(event) {\n      return handleChange(1, event);\n    },\n    tabIndex: tabIndex\n  }), React.createElement(StyledNumberInput, {\n    type: \"number\",\n    value: b,\n    bottomHelpText: \"B\",\n    onChange: function onChange(event) {\n      return handleChange(2, event);\n    },\n    tabIndex: tabIndex\n  }), React.createElement(StyledNumberInput, {\n    type: \"number\",\n    value: alpha,\n    bottomHelpText: \"ALPHA\",\n    onChange: handleAlphaChange,\n    tabIndex: tabIndex,\n    ref: lastRef\n  }));\n});\nexport default Rgba;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}