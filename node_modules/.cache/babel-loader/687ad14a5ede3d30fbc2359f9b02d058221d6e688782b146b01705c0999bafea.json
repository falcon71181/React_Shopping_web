{"ast":null,"code":"'use strict';\n\nvar visit = require('unist-util-visit');\nmodule.exports = getDefinitionFactory;\nvar own = {}.hasOwnProperty;\n\n// Get a definition in `node` by `identifier`.\nfunction getDefinitionFactory(node, options) {\n  return getterFactory(gather(node, options));\n}\n\n// Gather all definitions in `node`\nfunction gather(node, options) {\n  var cache = {};\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node');\n  }\n  visit(node, 'definition', options && options.commonmark ? commonmark : normal);\n  return cache;\n  function commonmark(definition) {\n    var id = normalise(definition.identifier);\n    if (!own.call(cache, id)) {\n      cache[id] = definition;\n    }\n  }\n  function normal(definition) {\n    cache[normalise(definition.identifier)] = definition;\n  }\n}\n\n// Factory to get a node from the given definition-cache.\nfunction getterFactory(cache) {\n  return getter;\n\n  // Get a node from the bound definition-cache.\n  function getter(identifier) {\n    var id = identifier && normalise(identifier);\n    return id && own.call(cache, id) ? cache[id] : null;\n  }\n}\nfunction normalise(identifier) {\n  return identifier.toUpperCase();\n}","map":{"version":3,"names":["visit","require","module","exports","getDefinitionFactory","own","hasOwnProperty","node","options","getterFactory","gather","cache","type","Error","commonmark","normal","definition","id","normalise","identifier","call","getter","toUpperCase"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/mdast-util-definitions/index.js"],"sourcesContent":["'use strict'\n\nvar visit = require('unist-util-visit')\n\nmodule.exports = getDefinitionFactory\n\nvar own = {}.hasOwnProperty\n\n// Get a definition in `node` by `identifier`.\nfunction getDefinitionFactory(node, options) {\n  return getterFactory(gather(node, options))\n}\n\n// Gather all definitions in `node`\nfunction gather(node, options) {\n  var cache = {}\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', options && options.commonmark ? commonmark : normal)\n\n  return cache\n\n  function commonmark(definition) {\n    var id = normalise(definition.identifier)\n    if (!own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  function normal(definition) {\n    cache[normalise(definition.identifier)] = definition\n  }\n}\n\n// Factory to get a node from the given definition-cache.\nfunction getterFactory(cache) {\n  return getter\n\n  // Get a node from the bound definition-cache.\n  function getter(identifier) {\n    var id = identifier && normalise(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\nfunction normalise(identifier) {\n  return identifier.toUpperCase()\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEvCC,MAAM,CAACC,OAAO,GAAGC,oBAAoB;AAErC,IAAIC,GAAG,GAAG,CAAC,CAAC,CAACC,cAAc;;AAE3B;AACA,SAASF,oBAAoBA,CAACG,IAAI,EAAEC,OAAO,EAAE;EAC3C,OAAOC,aAAa,CAACC,MAAM,CAACH,IAAI,EAAEC,OAAO,CAAC,CAAC;AAC7C;;AAEA;AACA,SAASE,MAAMA,CAACH,IAAI,EAAEC,OAAO,EAAE;EAC7B,IAAIG,KAAK,GAAG,CAAC,CAAC;EAEd,IAAI,CAACJ,IAAI,IAAI,CAACA,IAAI,CAACK,IAAI,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EACzD;EAEAb,KAAK,CAACO,IAAI,EAAE,YAAY,EAAEC,OAAO,IAAIA,OAAO,CAACM,UAAU,GAAGA,UAAU,GAAGC,MAAM,CAAC;EAE9E,OAAOJ,KAAK;EAEZ,SAASG,UAAUA,CAACE,UAAU,EAAE;IAC9B,IAAIC,EAAE,GAAGC,SAAS,CAACF,UAAU,CAACG,UAAU,CAAC;IACzC,IAAI,CAACd,GAAG,CAACe,IAAI,CAACT,KAAK,EAAEM,EAAE,CAAC,EAAE;MACxBN,KAAK,CAACM,EAAE,CAAC,GAAGD,UAAU;IACxB;EACF;EAEA,SAASD,MAAMA,CAACC,UAAU,EAAE;IAC1BL,KAAK,CAACO,SAAS,CAACF,UAAU,CAACG,UAAU,CAAC,CAAC,GAAGH,UAAU;EACtD;AACF;;AAEA;AACA,SAASP,aAAaA,CAACE,KAAK,EAAE;EAC5B,OAAOU,MAAM;;EAEb;EACA,SAASA,MAAMA,CAACF,UAAU,EAAE;IAC1B,IAAIF,EAAE,GAAGE,UAAU,IAAID,SAAS,CAACC,UAAU,CAAC;IAC5C,OAAOF,EAAE,IAAIZ,GAAG,CAACe,IAAI,CAACT,KAAK,EAAEM,EAAE,CAAC,GAAGN,KAAK,CAACM,EAAE,CAAC,GAAG,IAAI;EACrD;AACF;AAEA,SAASC,SAASA,CAACC,UAAU,EAAE;EAC7B,OAAOA,UAAU,CAACG,WAAW,CAAC,CAAC;AACjC"},"metadata":{},"sourceType":"script","externalDependencies":[]}