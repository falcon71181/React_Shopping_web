{"ast":null,"code":"import { useCallback } from 'react';\nimport { addMonths, isDateBelowLimit, isDateBeyondLimit, getFirstDayMonth, getCalendarBounds } from '../../helpers';\nexport default function useMoveFocusedMonthFunction(focusedDate, minDate, maxDate) {\n  return useCallback(function (increment) {\n    var _getCalendarBounds = getCalendarBounds(minDate, maxDate),\n      minCalendarDate = _getCalendarBounds.minCalendarDate,\n      maxCalendarDate = _getCalendarBounds.maxCalendarDate;\n    var nextFocusedDate = addMonths(focusedDate, increment);\n    if (isDateBelowLimit(nextFocusedDate, minCalendarDate)) return {\n      day: minCalendarDate,\n      month: getFirstDayMonth(minCalendarDate)\n    };\n    if (isDateBeyondLimit(nextFocusedDate, maxCalendarDate)) return {\n      day: maxCalendarDate,\n      month: getFirstDayMonth(maxCalendarDate)\n    };\n    return {\n      day: nextFocusedDate,\n      month: getFirstDayMonth(nextFocusedDate)\n    };\n  }, [focusedDate, minDate, maxDate]);\n}","map":{"version":3,"names":["useCallback","addMonths","isDateBelowLimit","isDateBeyondLimit","getFirstDayMonth","getCalendarBounds","useMoveFocusedMonthFunction","focusedDate","minDate","maxDate","increment","_getCalendarBounds","minCalendarDate","maxCalendarDate","nextFocusedDate","day","month"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/Calendar/doubleCalendar/hooks/useMoveFocusedMonth.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { addMonths, isDateBelowLimit, isDateBeyondLimit, getFirstDayMonth, getCalendarBounds } from '../../helpers';\nexport default function useMoveFocusedMonthFunction(focusedDate, minDate, maxDate) {\n  return useCallback(function (increment) {\n    var _getCalendarBounds = getCalendarBounds(minDate, maxDate),\n        minCalendarDate = _getCalendarBounds.minCalendarDate,\n        maxCalendarDate = _getCalendarBounds.maxCalendarDate;\n\n    var nextFocusedDate = addMonths(focusedDate, increment);\n    if (isDateBelowLimit(nextFocusedDate, minCalendarDate)) return {\n      day: minCalendarDate,\n      month: getFirstDayMonth(minCalendarDate)\n    };\n    if (isDateBeyondLimit(nextFocusedDate, maxCalendarDate)) return {\n      day: maxCalendarDate,\n      month: getFirstDayMonth(maxCalendarDate)\n    };\n    return {\n      day: nextFocusedDate,\n      month: getFirstDayMonth(nextFocusedDate)\n    };\n  }, [focusedDate, minDate, maxDate]);\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,SAAS,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,iBAAiB,QAAQ,eAAe;AACnH,eAAe,SAASC,2BAA2BA,CAACC,WAAW,EAAEC,OAAO,EAAEC,OAAO,EAAE;EACjF,OAAOT,WAAW,CAAC,UAAUU,SAAS,EAAE;IACtC,IAAIC,kBAAkB,GAAGN,iBAAiB,CAACG,OAAO,EAAEC,OAAO,CAAC;MACxDG,eAAe,GAAGD,kBAAkB,CAACC,eAAe;MACpDC,eAAe,GAAGF,kBAAkB,CAACE,eAAe;IAExD,IAAIC,eAAe,GAAGb,SAAS,CAACM,WAAW,EAAEG,SAAS,CAAC;IACvD,IAAIR,gBAAgB,CAACY,eAAe,EAAEF,eAAe,CAAC,EAAE,OAAO;MAC7DG,GAAG,EAAEH,eAAe;MACpBI,KAAK,EAAEZ,gBAAgB,CAACQ,eAAe;IACzC,CAAC;IACD,IAAIT,iBAAiB,CAACW,eAAe,EAAED,eAAe,CAAC,EAAE,OAAO;MAC9DE,GAAG,EAAEF,eAAe;MACpBG,KAAK,EAAEZ,gBAAgB,CAACS,eAAe;IACzC,CAAC;IACD,OAAO;MACLE,GAAG,EAAED,eAAe;MACpBE,KAAK,EAAEZ,gBAAgB,CAACU,eAAe;IACzC,CAAC;EACH,CAAC,EAAE,CAACP,WAAW,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}