{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFilterCountries, useKeyboardNavigation, useScrollControls, useItemsRef, useHandleCountryChange } from './hooks';\nimport { StyledScrollable, StyledUl, StyledDropdown, StyledSearchContainer, StyledSearch, StyledScrollControls } from './styled';\nimport { Arrow } from '../../InternalDropdown/styled';\nimport CountriesList from './countriesList';\nimport RenderIf from '../../RenderIf';\nimport StyledSearchIcon from '../../Lookup/options/styled/searchIcon';\nimport StyledOptionsContainer from '../../Lookup/options/styled/optionsContainer';\nimport StyledEmptyMessage from '../../Lookup/options/styled/emptyMessage';\nvar CountriesDropdown = memo(React.forwardRef(function (props, ref) {\n  var country = props.country,\n    countries = props.countries,\n    isOpen = props.isOpen,\n    searchRef = props.searchRef,\n    onCountryChange = props.onCountryChange,\n    onKeyDown = props.onKeyDown,\n    borderRadius = props.borderRadius;\n  var scrollableRef = useRef();\n  var _useFilterCountries = useFilterCountries(countries, country),\n    _useFilterCountries2 = _slicedToArray(_useFilterCountries, 3),\n    query = _useFilterCountries2[0],\n    countriesFiltered = _useFilterCountries2[1],\n    setQuery = _useFilterCountries2[2];\n  var itemsRef = useItemsRef(countriesFiltered.length);\n  var handleCountryChange = useHandleCountryChange(scrollableRef, onCountryChange, setQuery);\n  var handleActiveChange = useKeyboardNavigation(country, countriesFiltered, searchRef, scrollableRef, itemsRef, handleCountryChange);\n  var _useScrollControls = useScrollControls(scrollableRef),\n    showScrollUp = _useScrollControls.showScrollUp,\n    showScrollDown = _useScrollControls.showScrollDown,\n    handleScrollUpMouseEnter = _useScrollControls.handleScrollUpMouseEnter,\n    handleScrollDownouseEnter = _useScrollControls.handleScrollDownouseEnter,\n    stopScroll = _useScrollControls.stopScroll;\n  var listHeight = countriesFiltered.length * 45;\n  return React.createElement(StyledDropdown, {\n    isOpen: isOpen,\n    onKeyDown: onKeyDown,\n    ref: ref,\n    borderRadius: borderRadius\n  }, React.createElement(StyledSearchContainer, null, React.createElement(StyledSearch, {\n    ref: searchRef,\n    type: \"text\",\n    value: query,\n    onChange: function onChange(event) {\n      return setQuery(event.target.value);\n    }\n  })), React.createElement(StyledScrollControls, null, React.createElement(RenderIf, {\n    isTrue: showScrollUp\n  }, React.createElement(Arrow, {\n    direction: \"up\",\n    onMouseEnter: handleScrollUpMouseEnter,\n    onMouseLeave: stopScroll\n  })), React.createElement(StyledScrollable, {\n    ref: scrollableRef\n  }, React.createElement(RenderIf, {\n    isTrue: countriesFiltered.length > 0\n  }, React.createElement(StyledUl, {\n    role: \"listbox\",\n    listHeight: listHeight\n  }, React.createElement(CountriesList, {\n    countries: countriesFiltered,\n    country: country,\n    itemsRef: itemsRef,\n    handleCountryChange: handleCountryChange,\n    handleActiveChange: handleActiveChange\n  }))), React.createElement(RenderIf, {\n    isTrue: countriesFiltered.length === 0\n  }, React.createElement(StyledOptionsContainer, {\n    as: \"div\",\n    \"data-id\": \"phone-country-empty-container\"\n  }, React.createElement(StyledSearchIcon, null), React.createElement(StyledEmptyMessage, null, \"Our robots did not find any match for\", React.createElement(\"span\", null, \" \\\"\".concat(query, \"\\\"\"))))))), React.createElement(RenderIf, {\n    isTrue: showScrollDown\n  }, React.createElement(Arrow, {\n    direction: \"down\",\n    onMouseEnter: handleScrollDownouseEnter,\n    onMouseLeave: stopScroll\n  })));\n}));\nCountriesDropdown.propTypes = {\n  countries: PropTypes.array,\n  country: PropTypes.object,\n  searchRef: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onCountryChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  borderRadius: PropTypes.oneOf(['square', 'semi-square', 'semi-rounded', 'rounded'])\n};\nCountriesDropdown.defaultProps = {\n  countries: [],\n  country: undefined,\n  isOpen: false,\n  searchRef: undefined,\n  onCountryChange: function onCountryChange() {},\n  onKeyDown: function onKeyDown() {},\n  borderRadius: 'rounded'\n};\nexport default CountriesDropdown;","map":{"version":3,"names":["_slicedToArray","React","useRef","memo","PropTypes","useFilterCountries","useKeyboardNavigation","useScrollControls","useItemsRef","useHandleCountryChange","StyledScrollable","StyledUl","StyledDropdown","StyledSearchContainer","StyledSearch","StyledScrollControls","Arrow","CountriesList","RenderIf","StyledSearchIcon","StyledOptionsContainer","StyledEmptyMessage","CountriesDropdown","forwardRef","props","ref","country","countries","isOpen","searchRef","onCountryChange","onKeyDown","borderRadius","scrollableRef","_useFilterCountries","_useFilterCountries2","query","countriesFiltered","setQuery","itemsRef","length","handleCountryChange","handleActiveChange","_useScrollControls","showScrollUp","showScrollDown","handleScrollUpMouseEnter","handleScrollDownouseEnter","stopScroll","listHeight","createElement","type","value","onChange","event","target","isTrue","direction","onMouseEnter","onMouseLeave","role","as","concat","propTypes","array","object","bool","func","oneOf","defaultProps","undefined"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/PhoneInput/countriesDropdown/index.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFilterCountries, useKeyboardNavigation, useScrollControls, useItemsRef, useHandleCountryChange } from './hooks';\nimport { StyledScrollable, StyledUl, StyledDropdown, StyledSearchContainer, StyledSearch, StyledScrollControls } from './styled';\nimport { Arrow } from '../../InternalDropdown/styled';\nimport CountriesList from './countriesList';\nimport RenderIf from '../../RenderIf';\nimport StyledSearchIcon from '../../Lookup/options/styled/searchIcon';\nimport StyledOptionsContainer from '../../Lookup/options/styled/optionsContainer';\nimport StyledEmptyMessage from '../../Lookup/options/styled/emptyMessage';\nvar CountriesDropdown = memo(React.forwardRef(function (props, ref) {\n  var country = props.country,\n      countries = props.countries,\n      isOpen = props.isOpen,\n      searchRef = props.searchRef,\n      onCountryChange = props.onCountryChange,\n      onKeyDown = props.onKeyDown,\n      borderRadius = props.borderRadius;\n  var scrollableRef = useRef();\n\n  var _useFilterCountries = useFilterCountries(countries, country),\n      _useFilterCountries2 = _slicedToArray(_useFilterCountries, 3),\n      query = _useFilterCountries2[0],\n      countriesFiltered = _useFilterCountries2[1],\n      setQuery = _useFilterCountries2[2];\n\n  var itemsRef = useItemsRef(countriesFiltered.length);\n  var handleCountryChange = useHandleCountryChange(scrollableRef, onCountryChange, setQuery);\n  var handleActiveChange = useKeyboardNavigation(country, countriesFiltered, searchRef, scrollableRef, itemsRef, handleCountryChange);\n\n  var _useScrollControls = useScrollControls(scrollableRef),\n      showScrollUp = _useScrollControls.showScrollUp,\n      showScrollDown = _useScrollControls.showScrollDown,\n      handleScrollUpMouseEnter = _useScrollControls.handleScrollUpMouseEnter,\n      handleScrollDownouseEnter = _useScrollControls.handleScrollDownouseEnter,\n      stopScroll = _useScrollControls.stopScroll;\n\n  var listHeight = countriesFiltered.length * 45;\n  return React.createElement(StyledDropdown, {\n    isOpen: isOpen,\n    onKeyDown: onKeyDown,\n    ref: ref,\n    borderRadius: borderRadius\n  }, React.createElement(StyledSearchContainer, null, React.createElement(StyledSearch, {\n    ref: searchRef,\n    type: \"text\",\n    value: query,\n    onChange: function onChange(event) {\n      return setQuery(event.target.value);\n    }\n  })), React.createElement(StyledScrollControls, null, React.createElement(RenderIf, {\n    isTrue: showScrollUp\n  }, React.createElement(Arrow, {\n    direction: \"up\",\n    onMouseEnter: handleScrollUpMouseEnter,\n    onMouseLeave: stopScroll\n  })), React.createElement(StyledScrollable, {\n    ref: scrollableRef\n  }, React.createElement(RenderIf, {\n    isTrue: countriesFiltered.length > 0\n  }, React.createElement(StyledUl, {\n    role: \"listbox\",\n    listHeight: listHeight\n  }, React.createElement(CountriesList, {\n    countries: countriesFiltered,\n    country: country,\n    itemsRef: itemsRef,\n    handleCountryChange: handleCountryChange,\n    handleActiveChange: handleActiveChange\n  }))), React.createElement(RenderIf, {\n    isTrue: countriesFiltered.length === 0\n  }, React.createElement(StyledOptionsContainer, {\n    as: \"div\",\n    \"data-id\": \"phone-country-empty-container\"\n  }, React.createElement(StyledSearchIcon, null), React.createElement(StyledEmptyMessage, null, \"Our robots did not find any match for\", React.createElement(\"span\", null, \" \\\"\".concat(query, \"\\\"\"))))))), React.createElement(RenderIf, {\n    isTrue: showScrollDown\n  }, React.createElement(Arrow, {\n    direction: \"down\",\n    onMouseEnter: handleScrollDownouseEnter,\n    onMouseLeave: stopScroll\n  })));\n}));\nCountriesDropdown.propTypes = {\n  countries: PropTypes.array,\n  country: PropTypes.object,\n  searchRef: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onCountryChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  borderRadius: PropTypes.oneOf(['square', 'semi-square', 'semi-rounded', 'rounded'])\n};\nCountriesDropdown.defaultProps = {\n  countries: [],\n  country: undefined,\n  isOpen: false,\n  searchRef: undefined,\n  onCountryChange: function onCountryChange() {},\n  onKeyDown: function onKeyDown() {},\n  borderRadius: 'rounded'\n};\nexport default CountriesDropdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}