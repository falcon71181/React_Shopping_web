{"ast":null,"code":"import { useMemo } from 'react';\nimport isValidColor from '../../../styles/helpers/color/isValidColor';\nexport var defaultColors = ['#e3aaec', '#c3dbf7', '#9fd6ff', '#9de7da', '#9ef0bf', '#fef199', '#fdd499', '#d174e0', '#86baf3', '#5ebbff', '#42d8be', '#3be282', '#ffe654', '#ffb758', '#bd35bd', '#5779c1', '#4A90E2', '#06aea9', '#3dba4c', '#f5bc24', '#f99222', '#570e8c', '#021970', '#0b2399', '#0d7477', '#0a6b50', '#b67e12', '#b75d0c'];\nexport default function useNormalizeColors(props) {\n  var colors = props.defaultColors,\n    variant = props.variant;\n  return useMemo(function () {\n    var validColors = Array.isArray(colors) ? colors.filter(function (color) {\n      return isValidColor(color);\n    }) : [];\n    if (variant === 'colors-fixed') {\n      if (!validColors.length > 0) {\n        console.warn('If the props variant is colors-fixed, the defaultColors prop must contain at least one valid color');\n        return defaultColors;\n      }\n    }\n    return validColors;\n  }, [colors, variant]);\n}","map":{"version":3,"names":["useMemo","isValidColor","defaultColors","useNormalizeColors","props","colors","variant","validColors","Array","isArray","filter","color","length","console","warn"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/ColorPicker/hooks/useNormalizeColors.js"],"sourcesContent":["import { useMemo } from 'react';\nimport isValidColor from '../../../styles/helpers/color/isValidColor';\nexport var defaultColors = ['#e3aaec', '#c3dbf7', '#9fd6ff', '#9de7da', '#9ef0bf', '#fef199', '#fdd499', '#d174e0', '#86baf3', '#5ebbff', '#42d8be', '#3be282', '#ffe654', '#ffb758', '#bd35bd', '#5779c1', '#4A90E2', '#06aea9', '#3dba4c', '#f5bc24', '#f99222', '#570e8c', '#021970', '#0b2399', '#0d7477', '#0a6b50', '#b67e12', '#b75d0c'];\nexport default function useNormalizeColors(props) {\n  var colors = props.defaultColors,\n      variant = props.variant;\n  return useMemo(function () {\n    var validColors = Array.isArray(colors) ? colors.filter(function (color) {\n      return isValidColor(color);\n    }) : [];\n\n    if (variant === 'colors-fixed') {\n      if (!validColors.length > 0) {\n        console.warn('If the props variant is colors-fixed, the defaultColors prop must contain at least one valid color');\n        return defaultColors;\n      }\n    }\n\n    return validColors;\n  }, [colors, variant]);\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,YAAY,MAAM,4CAA4C;AACrE,OAAO,IAAIC,aAAa,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC/U,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAChD,IAAIC,MAAM,GAAGD,KAAK,CAACF,aAAa;IAC5BI,OAAO,GAAGF,KAAK,CAACE,OAAO;EAC3B,OAAON,OAAO,CAAC,YAAY;IACzB,IAAIO,WAAW,GAAGC,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,GAAGA,MAAM,CAACK,MAAM,CAAC,UAAUC,KAAK,EAAE;MACvE,OAAOV,YAAY,CAACU,KAAK,CAAC;IAC5B,CAAC,CAAC,GAAG,EAAE;IAEP,IAAIL,OAAO,KAAK,cAAc,EAAE;MAC9B,IAAI,CAACC,WAAW,CAACK,MAAM,GAAG,CAAC,EAAE;QAC3BC,OAAO,CAACC,IAAI,CAAC,oGAAoG,CAAC;QAClH,OAAOZ,aAAa;MACtB;IACF;IAEA,OAAOK,WAAW;EACpB,CAAC,EAAE,CAACF,MAAM,EAAEC,OAAO,CAAC,CAAC;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}