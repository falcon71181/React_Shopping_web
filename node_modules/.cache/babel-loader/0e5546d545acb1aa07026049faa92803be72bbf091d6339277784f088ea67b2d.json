{"ast":null,"code":"'use strict';\n\nmodule.exports = setextHeading;\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar equalsTo = '=';\nvar dash = '-';\nvar maxIndent = 3;\nvar equalsToDepth = 1;\nvar dashDepth = 2;\nfunction setextHeading(eat, value, silent) {\n  var self = this;\n  var now = eat.now();\n  var length = value.length;\n  var index = -1;\n  var subvalue = '';\n  var content;\n  var queue;\n  var character;\n  var marker;\n  var depth;\n\n  // Eat initial indentation.\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character !== space || index >= maxIndent) {\n      index--;\n      break;\n    }\n    subvalue += character;\n  }\n\n  // Eat content.\n  content = '';\n  queue = '';\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character === lineFeed) {\n      index--;\n      break;\n    }\n    if (character === space || character === tab) {\n      queue += character;\n    } else {\n      content += queue + character;\n      queue = '';\n    }\n  }\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  subvalue += content + queue;\n\n  // Ensure the content is followed by a newline and a valid marker.\n  character = value.charAt(++index);\n  marker = value.charAt(++index);\n  if (character !== lineFeed || marker !== equalsTo && marker !== dash) {\n    return;\n  }\n  subvalue += character;\n\n  // Eat Setext-line.\n  queue = marker;\n  depth = marker === equalsTo ? equalsToDepth : dashDepth;\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character !== marker) {\n      if (character !== lineFeed) {\n        return;\n      }\n      index--;\n      break;\n    }\n    queue += character;\n  }\n  if (silent) {\n    return true;\n  }\n  return eat(subvalue + queue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  });\n}","map":{"version":3,"names":["module","exports","setextHeading","lineFeed","tab","space","equalsTo","dash","maxIndent","equalsToDepth","dashDepth","eat","value","silent","self","now","length","index","subvalue","content","queue","character","marker","depth","charAt","column","offset","type","children","tokenizeInline"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/heading-setext.js"],"sourcesContent":["'use strict'\n\nmodule.exports = setextHeading\n\nvar lineFeed = '\\n'\nvar tab = '\\t'\nvar space = ' '\nvar equalsTo = '='\nvar dash = '-'\n\nvar maxIndent = 3\n\nvar equalsToDepth = 1\nvar dashDepth = 2\n\nfunction setextHeading(eat, value, silent) {\n  var self = this\n  var now = eat.now()\n  var length = value.length\n  var index = -1\n  var subvalue = ''\n  var content\n  var queue\n  var character\n  var marker\n  var depth\n\n  // Eat initial indentation.\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character !== space || index >= maxIndent) {\n      index--\n      break\n    }\n\n    subvalue += character\n  }\n\n  // Eat content.\n  content = ''\n  queue = ''\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character === lineFeed) {\n      index--\n      break\n    }\n\n    if (character === space || character === tab) {\n      queue += character\n    } else {\n      content += queue + character\n      queue = ''\n    }\n  }\n\n  now.column += subvalue.length\n  now.offset += subvalue.length\n  subvalue += content + queue\n\n  // Ensure the content is followed by a newline and a valid marker.\n  character = value.charAt(++index)\n  marker = value.charAt(++index)\n\n  if (character !== lineFeed || (marker !== equalsTo && marker !== dash)) {\n    return\n  }\n\n  subvalue += character\n\n  // Eat Setext-line.\n  queue = marker\n  depth = marker === equalsTo ? equalsToDepth : dashDepth\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character !== marker) {\n      if (character !== lineFeed) {\n        return\n      }\n\n      index--\n      break\n    }\n\n    queue += character\n  }\n\n  if (silent) {\n    return true\n  }\n\n  return eat(subvalue + queue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,aAAa;AAE9B,IAAIC,QAAQ,GAAG,IAAI;AACnB,IAAIC,GAAG,GAAG,IAAI;AACd,IAAIC,KAAK,GAAG,GAAG;AACf,IAAIC,QAAQ,GAAG,GAAG;AAClB,IAAIC,IAAI,GAAG,GAAG;AAEd,IAAIC,SAAS,GAAG,CAAC;AAEjB,IAAIC,aAAa,GAAG,CAAC;AACrB,IAAIC,SAAS,GAAG,CAAC;AAEjB,SAASR,aAAaA,CAACS,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACzC,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,GAAG,GAAGJ,GAAG,CAACI,GAAG,CAAC,CAAC;EACnB,IAAIC,MAAM,GAAGJ,KAAK,CAACI,MAAM;EACzB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,OAAO;EACX,IAAIC,KAAK;EACT,IAAIC,SAAS;EACb,IAAIC,MAAM;EACV,IAAIC,KAAK;;EAET;EACA,OAAO,EAAEN,KAAK,GAAGD,MAAM,EAAE;IACvBK,SAAS,GAAGT,KAAK,CAACY,MAAM,CAACP,KAAK,CAAC;IAE/B,IAAII,SAAS,KAAKhB,KAAK,IAAIY,KAAK,IAAIT,SAAS,EAAE;MAC7CS,KAAK,EAAE;MACP;IACF;IAEAC,QAAQ,IAAIG,SAAS;EACvB;;EAEA;EACAF,OAAO,GAAG,EAAE;EACZC,KAAK,GAAG,EAAE;EAEV,OAAO,EAAEH,KAAK,GAAGD,MAAM,EAAE;IACvBK,SAAS,GAAGT,KAAK,CAACY,MAAM,CAACP,KAAK,CAAC;IAE/B,IAAII,SAAS,KAAKlB,QAAQ,EAAE;MAC1Bc,KAAK,EAAE;MACP;IACF;IAEA,IAAII,SAAS,KAAKhB,KAAK,IAAIgB,SAAS,KAAKjB,GAAG,EAAE;MAC5CgB,KAAK,IAAIC,SAAS;IACpB,CAAC,MAAM;MACLF,OAAO,IAAIC,KAAK,GAAGC,SAAS;MAC5BD,KAAK,GAAG,EAAE;IACZ;EACF;EAEAL,GAAG,CAACU,MAAM,IAAIP,QAAQ,CAACF,MAAM;EAC7BD,GAAG,CAACW,MAAM,IAAIR,QAAQ,CAACF,MAAM;EAC7BE,QAAQ,IAAIC,OAAO,GAAGC,KAAK;;EAE3B;EACAC,SAAS,GAAGT,KAAK,CAACY,MAAM,CAAC,EAAEP,KAAK,CAAC;EACjCK,MAAM,GAAGV,KAAK,CAACY,MAAM,CAAC,EAAEP,KAAK,CAAC;EAE9B,IAAII,SAAS,KAAKlB,QAAQ,IAAKmB,MAAM,KAAKhB,QAAQ,IAAIgB,MAAM,KAAKf,IAAK,EAAE;IACtE;EACF;EAEAW,QAAQ,IAAIG,SAAS;;EAErB;EACAD,KAAK,GAAGE,MAAM;EACdC,KAAK,GAAGD,MAAM,KAAKhB,QAAQ,GAAGG,aAAa,GAAGC,SAAS;EAEvD,OAAO,EAAEO,KAAK,GAAGD,MAAM,EAAE;IACvBK,SAAS,GAAGT,KAAK,CAACY,MAAM,CAACP,KAAK,CAAC;IAE/B,IAAII,SAAS,KAAKC,MAAM,EAAE;MACxB,IAAID,SAAS,KAAKlB,QAAQ,EAAE;QAC1B;MACF;MAEAc,KAAK,EAAE;MACP;IACF;IAEAG,KAAK,IAAIC,SAAS;EACpB;EAEA,IAAIR,MAAM,EAAE;IACV,OAAO,IAAI;EACb;EAEA,OAAOF,GAAG,CAACO,QAAQ,GAAGE,KAAK,CAAC,CAAC;IAC3BO,IAAI,EAAE,SAAS;IACfJ,KAAK,EAAEA,KAAK;IACZK,QAAQ,EAAEd,IAAI,CAACe,cAAc,CAACV,OAAO,EAAEJ,GAAG;EAC5C,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}