{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport sortWeekDays from './sortWeekDays';\nexport default function getNormalizedValue(weekDay, isChecked, multiple, value) {\n  if (multiple && value) {\n    if (isChecked && !value.includes(weekDay)) {\n      return sortWeekDays([].concat(_toConsumableArray(value), [weekDay]));\n    }\n    return sortWeekDays(value.filter(function (day) {\n      return day !== weekDay;\n    }));\n  }\n  return weekDay;\n}","map":{"version":3,"names":["_toConsumableArray","sortWeekDays","getNormalizedValue","weekDay","isChecked","multiple","value","includes","concat","filter","day"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/WeekDayPicker/helpers/getNormalizedValue.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport sortWeekDays from './sortWeekDays';\nexport default function getNormalizedValue(weekDay, isChecked, multiple, value) {\n  if (multiple && value) {\n    if (isChecked && !value.includes(weekDay)) {\n      return sortWeekDays([].concat(_toConsumableArray(value), [weekDay]));\n    }\n\n    return sortWeekDays(value.filter(function (day) {\n      return day !== weekDay;\n    }));\n  }\n\n  return weekDay;\n}"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,0CAA0C;AACzE,OAAOC,YAAY,MAAM,gBAAgB;AACzC,eAAe,SAASC,kBAAkBA,CAACC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAE;EAC9E,IAAID,QAAQ,IAAIC,KAAK,EAAE;IACrB,IAAIF,SAAS,IAAI,CAACE,KAAK,CAACC,QAAQ,CAACJ,OAAO,CAAC,EAAE;MACzC,OAAOF,YAAY,CAAC,EAAE,CAACO,MAAM,CAACR,kBAAkB,CAACM,KAAK,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC,CAAC;IACtE;IAEA,OAAOF,YAAY,CAACK,KAAK,CAACG,MAAM,CAAC,UAAUC,GAAG,EAAE;MAC9C,OAAOA,GAAG,KAAKP,OAAO;IACxB,CAAC,CAAC,CAAC;EACL;EAEA,OAAOA,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}