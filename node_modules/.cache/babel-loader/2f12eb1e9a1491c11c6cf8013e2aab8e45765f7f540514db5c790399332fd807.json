{"ast":null,"code":"'use strict';\n\nmodule.exports = thematicBreak;\nvar tab = '\\t';\nvar lineFeed = '\\n';\nvar space = ' ';\nvar asterisk = '*';\nvar dash = '-';\nvar underscore = '_';\nvar maxCount = 3;\nfunction thematicBreak(eat, value, silent) {\n  var index = -1;\n  var length = value.length + 1;\n  var subvalue = '';\n  var character;\n  var marker;\n  var markerCount;\n  var queue;\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character !== tab && character !== space) {\n      break;\n    }\n    subvalue += character;\n  }\n  if (character !== asterisk && character !== dash && character !== underscore) {\n    return;\n  }\n  marker = character;\n  subvalue += character;\n  markerCount = 1;\n  queue = '';\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character === marker) {\n      markerCount++;\n      subvalue += queue + marker;\n      queue = '';\n    } else if (character === space) {\n      queue += character;\n    } else if (markerCount >= maxCount && (!character || character === lineFeed)) {\n      subvalue += queue;\n      if (silent) {\n        return true;\n      }\n      return eat(subvalue)({\n        type: 'thematicBreak'\n      });\n    } else {\n      return;\n    }\n  }\n}","map":{"version":3,"names":["module","exports","thematicBreak","tab","lineFeed","space","asterisk","dash","underscore","maxCount","eat","value","silent","index","length","subvalue","character","marker","markerCount","queue","charAt","type"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/thematic-break.js"],"sourcesContent":["'use strict'\n\nmodule.exports = thematicBreak\n\nvar tab = '\\t'\nvar lineFeed = '\\n'\nvar space = ' '\nvar asterisk = '*'\nvar dash = '-'\nvar underscore = '_'\n\nvar maxCount = 3\n\nfunction thematicBreak(eat, value, silent) {\n  var index = -1\n  var length = value.length + 1\n  var subvalue = ''\n  var character\n  var marker\n  var markerCount\n  var queue\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character !== tab && character !== space) {\n      break\n    }\n\n    subvalue += character\n  }\n\n  if (\n    character !== asterisk &&\n    character !== dash &&\n    character !== underscore\n  ) {\n    return\n  }\n\n  marker = character\n  subvalue += character\n  markerCount = 1\n  queue = ''\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (character === marker) {\n      markerCount++\n      subvalue += queue + marker\n      queue = ''\n    } else if (character === space) {\n      queue += character\n    } else if (\n      markerCount >= maxCount &&\n      (!character || character === lineFeed)\n    ) {\n      subvalue += queue\n\n      if (silent) {\n        return true\n      }\n\n      return eat(subvalue)({type: 'thematicBreak'})\n    } else {\n      return\n    }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,aAAa;AAE9B,IAAIC,GAAG,GAAG,IAAI;AACd,IAAIC,QAAQ,GAAG,IAAI;AACnB,IAAIC,KAAK,GAAG,GAAG;AACf,IAAIC,QAAQ,GAAG,GAAG;AAClB,IAAIC,IAAI,GAAG,GAAG;AACd,IAAIC,UAAU,GAAG,GAAG;AAEpB,IAAIC,QAAQ,GAAG,CAAC;AAEhB,SAASP,aAAaA,CAACQ,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACzC,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,MAAM,GAAGH,KAAK,CAACG,MAAM,GAAG,CAAC;EAC7B,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,SAAS;EACb,IAAIC,MAAM;EACV,IAAIC,WAAW;EACf,IAAIC,KAAK;EAET,OAAO,EAAEN,KAAK,GAAGC,MAAM,EAAE;IACvBE,SAAS,GAAGL,KAAK,CAACS,MAAM,CAACP,KAAK,CAAC;IAE/B,IAAIG,SAAS,KAAKb,GAAG,IAAIa,SAAS,KAAKX,KAAK,EAAE;MAC5C;IACF;IAEAU,QAAQ,IAAIC,SAAS;EACvB;EAEA,IACEA,SAAS,KAAKV,QAAQ,IACtBU,SAAS,KAAKT,IAAI,IAClBS,SAAS,KAAKR,UAAU,EACxB;IACA;EACF;EAEAS,MAAM,GAAGD,SAAS;EAClBD,QAAQ,IAAIC,SAAS;EACrBE,WAAW,GAAG,CAAC;EACfC,KAAK,GAAG,EAAE;EAEV,OAAO,EAAEN,KAAK,GAAGC,MAAM,EAAE;IACvBE,SAAS,GAAGL,KAAK,CAACS,MAAM,CAACP,KAAK,CAAC;IAE/B,IAAIG,SAAS,KAAKC,MAAM,EAAE;MACxBC,WAAW,EAAE;MACbH,QAAQ,IAAII,KAAK,GAAGF,MAAM;MAC1BE,KAAK,GAAG,EAAE;IACZ,CAAC,MAAM,IAAIH,SAAS,KAAKX,KAAK,EAAE;MAC9Bc,KAAK,IAAIH,SAAS;IACpB,CAAC,MAAM,IACLE,WAAW,IAAIT,QAAQ,KACtB,CAACO,SAAS,IAAIA,SAAS,KAAKZ,QAAQ,CAAC,EACtC;MACAW,QAAQ,IAAII,KAAK;MAEjB,IAAIP,MAAM,EAAE;QACV,OAAO,IAAI;MACb;MAEA,OAAOF,GAAG,CAACK,QAAQ,CAAC,CAAC;QAACM,IAAI,EAAE;MAAe,CAAC,CAAC;IAC/C,CAAC,MAAM;MACL;IACF;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}