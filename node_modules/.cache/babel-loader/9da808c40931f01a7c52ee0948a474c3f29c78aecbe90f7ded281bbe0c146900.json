{"ast":null,"code":"import getFormattedEventTime from './getFormattedEventTime';\nvar formatter = function formatter(locale) {\n  return new Intl.DateTimeFormat(locale, {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n};\nexport default function getFormattedEventTimeRange(startDate, endDate, locale) {\n  var startDateParts = formatter(locale).formatToParts(startDate);\n  var endDateParts = formatter(locale).formatToParts(endDate);\n  var formattedStartDate = getFormattedEventTime(startDateParts.filter(function (_ref, index, arr) {\n    var type = _ref.type,\n      value = _ref.value;\n    if (type.toLowerCase() === 'dayperiod' && value === endDateParts[index].value) {\n      return false;\n    }\n    var next = arr[index + 1];\n    if (next && next.type.toLowerCase() === 'dayperiod' && next.value === endDateParts[index + 1].value) {\n      return false;\n    }\n    return true;\n  }));\n  var formattedEndDate = getFormattedEventTime(endDateParts);\n  return \"\".concat(formattedStartDate, \" - \").concat(formattedEndDate);\n}","map":{"version":3,"names":["getFormattedEventTime","formatter","locale","Intl","DateTimeFormat","hour","minute","hour12","getFormattedEventTimeRange","startDate","endDate","startDateParts","formatToParts","endDateParts","formattedStartDate","filter","_ref","index","arr","type","value","toLowerCase","next","formattedEndDate","concat"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/WeeklyCalendar/week/helpers/getFormattedEventTimeRange.js"],"sourcesContent":["import getFormattedEventTime from './getFormattedEventTime';\n\nvar formatter = function formatter(locale) {\n  return new Intl.DateTimeFormat(locale, {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n};\n\nexport default function getFormattedEventTimeRange(startDate, endDate, locale) {\n  var startDateParts = formatter(locale).formatToParts(startDate);\n  var endDateParts = formatter(locale).formatToParts(endDate);\n  var formattedStartDate = getFormattedEventTime(startDateParts.filter(function (_ref, index, arr) {\n    var type = _ref.type,\n        value = _ref.value;\n\n    if (type.toLowerCase() === 'dayperiod' && value === endDateParts[index].value) {\n      return false;\n    }\n\n    var next = arr[index + 1];\n\n    if (next && next.type.toLowerCase() === 'dayperiod' && next.value === endDateParts[index + 1].value) {\n      return false;\n    }\n\n    return true;\n  }));\n  var formattedEndDate = getFormattedEventTime(endDateParts);\n  return \"\".concat(formattedStartDate, \" - \").concat(formattedEndDate);\n}"],"mappings":"AAAA,OAAOA,qBAAqB,MAAM,yBAAyB;AAE3D,IAAIC,SAAS,GAAG,SAASA,SAASA,CAACC,MAAM,EAAE;EACzC,OAAO,IAAIC,IAAI,CAACC,cAAc,CAACF,MAAM,EAAE;IACrCG,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ,CAAC;AAED,eAAe,SAASC,0BAA0BA,CAACC,SAAS,EAAEC,OAAO,EAAER,MAAM,EAAE;EAC7E,IAAIS,cAAc,GAAGV,SAAS,CAACC,MAAM,CAAC,CAACU,aAAa,CAACH,SAAS,CAAC;EAC/D,IAAII,YAAY,GAAGZ,SAAS,CAACC,MAAM,CAAC,CAACU,aAAa,CAACF,OAAO,CAAC;EAC3D,IAAII,kBAAkB,GAAGd,qBAAqB,CAACW,cAAc,CAACI,MAAM,CAAC,UAAUC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE;IAC/F,IAAIC,IAAI,GAAGH,IAAI,CAACG,IAAI;MAChBC,KAAK,GAAGJ,IAAI,CAACI,KAAK;IAEtB,IAAID,IAAI,CAACE,WAAW,CAAC,CAAC,KAAK,WAAW,IAAID,KAAK,KAAKP,YAAY,CAACI,KAAK,CAAC,CAACG,KAAK,EAAE;MAC7E,OAAO,KAAK;IACd;IAEA,IAAIE,IAAI,GAAGJ,GAAG,CAACD,KAAK,GAAG,CAAC,CAAC;IAEzB,IAAIK,IAAI,IAAIA,IAAI,CAACH,IAAI,CAACE,WAAW,CAAC,CAAC,KAAK,WAAW,IAAIC,IAAI,CAACF,KAAK,KAAKP,YAAY,CAACI,KAAK,GAAG,CAAC,CAAC,CAACG,KAAK,EAAE;MACnG,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC,CAAC,CAAC;EACH,IAAIG,gBAAgB,GAAGvB,qBAAqB,CAACa,YAAY,CAAC;EAC1D,OAAO,EAAE,CAACW,MAAM,CAACV,kBAAkB,EAAE,KAAK,CAAC,CAACU,MAAM,CAACD,gBAAgB,CAAC;AACtE"},"metadata":{},"sourceType":"module","externalDependencies":[]}