{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nimport ImportRecordsFlow from '..';\nfunction getDateValue(value) {\n  var date = new Date(value);\n  var isValidDate = !isNaN(date.getTime());\n  return isValidDate ? date : '';\n}\nfunction getTypeValue(value, dataType) {\n  switch (dataType.name) {\n    case 'String':\n      return value;\n    case 'Number':\n      return !isNaN(Number(value)) ? Number(value) : '';\n    case 'Boolean':\n      return !!value;\n    case 'Date':\n      return getDateValue(value);\n    default:\n      return value || '';\n  }\n}\nfunction getNormalizedFieldValue(value, attributeDef) {\n  if (typeof attributeDef === 'function') {\n    return getTypeValue(value, attributeDef);\n  }\n  if (typeof attributeDef.type === 'function') {\n    return getTypeValue(value, attributeDef.type);\n  }\n  return value || '';\n}\nexport default function getDataToImport(params) {\n  var actionTypeMap = {\n    'add-records': ImportRecordsFlow.ADD_RECORDS,\n    'merge-records': ImportRecordsFlow.MERGE_RECORDS\n  };\n  var data = params.data,\n    fieldsMap = params.fieldsMap,\n    schema = params.schema,\n    actionOption = params.actionOption,\n    matchField = params.matchField;\n  return {\n    collection: schema.collection,\n    actionType: actionTypeMap[actionOption],\n    mergeByKey: matchField === 'default' ? '' : matchField,\n    data: data.map(function (item) {\n      return _objectSpread({}, Object.keys(fieldsMap).reduce(function (acc, field) {\n        var keys = fieldsMap[field].split(',');\n        var schemaField = schema.attributes[field];\n        var value = keys.reduce(function (accumulator, key) {\n          return \"\".concat(accumulator, \" \").concat(item[key] || '').trim();\n        }, '') || schemaField.defaultTo;\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, field, getNormalizedFieldValue(value, schemaField)));\n      }, {}));\n    })\n  };\n}","map":{"version":3,"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","ImportRecordsFlow","getDateValue","value","date","Date","isValidDate","isNaN","getTime","getTypeValue","dataType","name","Number","getNormalizedFieldValue","attributeDef","type","getDataToImport","params","actionTypeMap","ADD_RECORDS","MERGE_RECORDS","data","fieldsMap","schema","actionOption","matchField","collection","actionType","mergeByKey","map","item","reduce","acc","field","split","schemaField","attributes","accumulator","concat","trim","defaultTo"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/react-rainbow-components/esm/components/ImportRecordsFlow/helpers/getDataToImport.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport ImportRecordsFlow from '..';\n\nfunction getDateValue(value) {\n  var date = new Date(value);\n  var isValidDate = !isNaN(date.getTime());\n  return isValidDate ? date : '';\n}\n\nfunction getTypeValue(value, dataType) {\n  switch (dataType.name) {\n    case 'String':\n      return value;\n\n    case 'Number':\n      return !isNaN(Number(value)) ? Number(value) : '';\n\n    case 'Boolean':\n      return !!value;\n\n    case 'Date':\n      return getDateValue(value);\n\n    default:\n      return value || '';\n  }\n}\n\nfunction getNormalizedFieldValue(value, attributeDef) {\n  if (typeof attributeDef === 'function') {\n    return getTypeValue(value, attributeDef);\n  }\n\n  if (typeof attributeDef.type === 'function') {\n    return getTypeValue(value, attributeDef.type);\n  }\n\n  return value || '';\n}\n\nexport default function getDataToImport(params) {\n  var actionTypeMap = {\n    'add-records': ImportRecordsFlow.ADD_RECORDS,\n    'merge-records': ImportRecordsFlow.MERGE_RECORDS\n  };\n  var data = params.data,\n      fieldsMap = params.fieldsMap,\n      schema = params.schema,\n      actionOption = params.actionOption,\n      matchField = params.matchField;\n  return {\n    collection: schema.collection,\n    actionType: actionTypeMap[actionOption],\n    mergeByKey: matchField === 'default' ? '' : matchField,\n    data: data.map(function (item) {\n      return _objectSpread({}, Object.keys(fieldsMap).reduce(function (acc, field) {\n        var keys = fieldsMap[field].split(',');\n        var schemaField = schema.attributes[field];\n        var value = keys.reduce(function (accumulator, key) {\n          return \"\".concat(accumulator, \" \").concat(item[key] || '').trim();\n        }, '') || schemaField.defaultTo;\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, field, getNormalizedFieldValue(value, schemaField)));\n      }, {}));\n    })\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}