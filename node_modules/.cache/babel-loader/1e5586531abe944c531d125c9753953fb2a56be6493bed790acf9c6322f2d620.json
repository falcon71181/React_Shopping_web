{"ast":null,"code":"'use strict';\n\nvar repeat = require('repeat-string');\nvar trim = require('trim-trailing-lines');\nmodule.exports = indentedCode;\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar tabSize = 4;\nvar codeIndent = repeat(space, tabSize);\nfunction indentedCode(eat, value, silent) {\n  var index = -1;\n  var length = value.length;\n  var subvalue = '';\n  var content = '';\n  var subvalueQueue = '';\n  var contentQueue = '';\n  var character;\n  var blankQueue;\n  var indent;\n  while (++index < length) {\n    character = value.charAt(index);\n    if (indent) {\n      indent = false;\n      subvalue += subvalueQueue;\n      content += contentQueue;\n      subvalueQueue = '';\n      contentQueue = '';\n      if (character === lineFeed) {\n        subvalueQueue = character;\n        contentQueue = character;\n      } else {\n        subvalue += character;\n        content += character;\n        while (++index < length) {\n          character = value.charAt(index);\n          if (!character || character === lineFeed) {\n            contentQueue = character;\n            subvalueQueue = character;\n            break;\n          }\n          subvalue += character;\n          content += character;\n        }\n      }\n    } else if (character === space && value.charAt(index + 1) === character && value.charAt(index + 2) === character && value.charAt(index + 3) === character) {\n      subvalueQueue += codeIndent;\n      index += 3;\n      indent = true;\n    } else if (character === tab) {\n      subvalueQueue += character;\n      indent = true;\n    } else {\n      blankQueue = '';\n      while (character === tab || character === space) {\n        blankQueue += character;\n        character = value.charAt(++index);\n      }\n      if (character !== lineFeed) {\n        break;\n      }\n      subvalueQueue += blankQueue + character;\n      contentQueue += character;\n    }\n  }\n  if (content) {\n    if (silent) {\n      return true;\n    }\n    return eat(subvalue)({\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: trim(content)\n    });\n  }\n}","map":{"version":3,"names":["repeat","require","trim","module","exports","indentedCode","lineFeed","tab","space","tabSize","codeIndent","eat","value","silent","index","length","subvalue","content","subvalueQueue","contentQueue","character","blankQueue","indent","charAt","type","lang","meta"],"sources":["/home/kali/Desktop/react/React_Shopping_web/node_modules/remark-parse/lib/tokenize/code-indented.js"],"sourcesContent":["'use strict'\n\nvar repeat = require('repeat-string')\nvar trim = require('trim-trailing-lines')\n\nmodule.exports = indentedCode\n\nvar lineFeed = '\\n'\nvar tab = '\\t'\nvar space = ' '\n\nvar tabSize = 4\nvar codeIndent = repeat(space, tabSize)\n\nfunction indentedCode(eat, value, silent) {\n  var index = -1\n  var length = value.length\n  var subvalue = ''\n  var content = ''\n  var subvalueQueue = ''\n  var contentQueue = ''\n  var character\n  var blankQueue\n  var indent\n\n  while (++index < length) {\n    character = value.charAt(index)\n\n    if (indent) {\n      indent = false\n\n      subvalue += subvalueQueue\n      content += contentQueue\n      subvalueQueue = ''\n      contentQueue = ''\n\n      if (character === lineFeed) {\n        subvalueQueue = character\n        contentQueue = character\n      } else {\n        subvalue += character\n        content += character\n\n        while (++index < length) {\n          character = value.charAt(index)\n\n          if (!character || character === lineFeed) {\n            contentQueue = character\n            subvalueQueue = character\n            break\n          }\n\n          subvalue += character\n          content += character\n        }\n      }\n    } else if (\n      character === space &&\n      value.charAt(index + 1) === character &&\n      value.charAt(index + 2) === character &&\n      value.charAt(index + 3) === character\n    ) {\n      subvalueQueue += codeIndent\n      index += 3\n      indent = true\n    } else if (character === tab) {\n      subvalueQueue += character\n      indent = true\n    } else {\n      blankQueue = ''\n\n      while (character === tab || character === space) {\n        blankQueue += character\n        character = value.charAt(++index)\n      }\n\n      if (character !== lineFeed) {\n        break\n      }\n\n      subvalueQueue += blankQueue + character\n      contentQueue += character\n    }\n  }\n\n  if (content) {\n    if (silent) {\n      return true\n    }\n\n    return eat(subvalue)({\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: trim(content)\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}